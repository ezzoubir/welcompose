<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="settings">
	<title>Einstellungen</title>
	
	<sect1 id="settings.text_converters">
		<title>Textkonverter</title>
		
		<sect2 id="settings.text_converters.introduction">
			<title>Einführung</title>
			
			<para>
				Welcompose bietet zur Texteingabe bei Inhaltsseiten oder
				Blog Postings die Möglichkeit, entweder nacktes HTML oder
				einen sogenannten Textkonverter zu verwenden. Dieser
				Textkonverter stellt in der Regel eine Markup-Sprache zur
				Verfügung, mit deren Hilfe gewisse einfache
				Formatierungsanweisungen gegeben werden können, die
				später in HTML verwandelt werden &ndash; ohne, dass man
				selber HTML tippen muss.
			</para>
			
			<para>
				Ein bekanntes Beispiel ist die Markup-Sprache BBCode,
				die in vielen Diskussionsforen verwendet wird. Umschliesst
				man einen URL beispielsweise mit dem BBCode-Befehl 
				<code>[url]</code>, wird der URL in einen klickbaren Link
				verwandelt:
			</para>
			
			<programlisting><![CDATA[
[url]http://www.example.com/[/url]
]]></programlisting>
			
			<para>
				Sobald der Anwender dies in das Eingabefeld eingegeben
				und abgesendet hat, macht die Software im Hintergrund daraus
				je nach Implementierung beispielsweise:
			</para>
			
			<programlisting><![CDATA[
<a href="http://www.example.com/">www.example.com</a>
]]></programlisting>
			
			<para>
				Nach dem gleichen Prinzip funktionieren die Textkonverter
				in Welcompose. Welcompose bringt mit Markdown und Textile zwei
				populäre Textkonverter mit und ermöglicht mit Hilfe eines
				Plug-ins auch die Einbindung eigener Textkonverter.
			</para>
			
		</sect2>
		
		<sect2 id="settings.text_converters.usage">
			<title>Verwendung der Textkonverter</title>
			
			<para>
				Die Textkonverter werden überall im Webinterface angeboten,
				wo sich Inhalte für die jeweiligen Seiten eingeben lassen.
				Sie können pro Seite, Blog Posting oder Box über eine
				Auswahlliste ausgewählt werden. 
			</para>
			
			<figure id="settings.text_converters.usage.choose_text_converter">
				<title>Auswahl des Textkonverters</title>
				<graphic fileref="images/settings/text_converters/usage.choose_text_converter.png"/>
			</figure>
			
			<para>
				Es ist nur die Nutzung eines Textkonverters auf einmal
				möglich. Sollte der Wunsch danach bestehen, zwei Textkonverter
				zu kombinieren, muss dies über ein Plug-in und einen separaten
				Textkonverter realisiert werden (siehe <xref
				linkend="settings.text_converters.use_other_text_converters"/>). Dies
				wird zum jetzigen Zeitpunkt nicht empfohlen.
			</para>
			
			<note>
				<para>
					Für die Blog-Kommentare, kann der
					Textkonverter nur global für alle Blog-Kommentare
					gesetzt werden.
				</para>
			</note>
			
			<para>
				Hilftsfunktionen von Welcompose, beispielsweise zum Setzen
				interner Links oder zum Einfügen eines Bildes berücksichtigen
				automatisch den jeweils gewählten Textkonverter. Das heisst,
				dass je nach Textkonverter automatisch die richtige Syntax
				zum Integrieren von Bildern oder Links gewählt wird.
				Sollte ein Textkonverter ein bestimmtes Element nicht
				unterstützen, wird automatisch der passende (X)HTML-Code
				eingefügt.
			</para>
			
			<note>
				<para>
					Wird der Textkonverter während oder nach dem Editieren
					gewechselt, muss beachtet werden, dass die Syntax nicht
					automatisch gewechselt wird, sondern die alte beibehalten
					wird. Wer den Textkonverter wechselt, muss die Syntax
					also von Hand anpassen oder den Textkonverter vor dem
					Erstellen des Texts ändern.
				</para>
			</note>
		</sect2>
		
		<sect2 id="settings.text_converters.xhtml_markdown_and_textile">
			<title>XHTML, Markdown und Textile</title>
			
			<para>
				Welcompose bringt von Haus aus drei verschiedene
				Textkonverter mit:
			</para>
			
			<itemizedlist>
				<listitem>
					<para>
						XHTML
					</para>
				</listitem>
				<listitem>
					<para>
						Markdown
					</para>
				</listitem>
				<listitem>
					<para>
						Textile
					</para>
				</listitem>
			</itemizedlist>
			
			<sect3 id="settings.text_converters.xhtml_markdown_an_textile.xhtml">
				<title>XHTML</title>
				
				<para>
					Der Textkonverter XHTML ist kein eigentlicher Textkonverter,
					da er eigentlich nichts tut. Er speichert den eingegebenen
					Text unverändert ab. Sein Einsatz empfiehlt sich dann,
					wenn man HTML-Code eingeben möchte.
				</para>
				
				<para>
					Er ist der Standard-Textkonverter und darf <emphasis role="bold">nicht</emphasis> aus dem
					System entfernt werden, da es sonst passieren kann,
					dass beispielsweise der Mediamanager oder die
					Hilfsfunktionen zum Integrieren von Links oder Boxen
					nicht funktionieren. Dies, da er die 
					Standardfunktionalität dazu bereitstellt, auf die
					andere Textkonverter zurückgreifen können, wenn sie selber
					über keine Methoden zum Einfügen eines Elements verfügen.
				</para>
				
			</sect3>
			
			<sect3 id="settings.text_converters.xhtml_markdown_an_textile.markdown">
				<title>Markdown</title>
				
				<para>
					Der Textkonverter Markdown<footnote>
					<para>
						<ulink type="external" url="http://daringfireball.net/projects/markdown/"/>
					</para>
					</footnote>
					ist eine Entwicklung von John Gruber und in Form von
					PHP Markdown Extra<footnote>
					<para>
						<ulink type="external" url="http://www.michelf.com/projects/php-markdown/extra/"/>
					</para>
					</footnote>
					von Michel Fortin integriert.
				</para>
				
				<para>
					Markdown bietet eine einfache und klare Syntax, die
					sich zur einfachen Strukturierung von Texten eignet.
				</para>
				
			</sect3>
			
			<sect3 id="settings.text_converters.xhtml_markdown_an_textile.textile">
				<title>Textile</title>
				
				<para>
					Textile<footnote>
					<para>
						<ulink type="external" url="http://textile.thresholdstate.com/"/>
					</para>
					</footnote>
					ist eine Entwicklung von Dean Allen und
					ursprünglich für die Weblog-Software Textpattern
					entwickelt worden.
				</para>
				
				<para>
					Textile eignet sich vor allem für kompliziertere 
					Formatierungen, bei denen Elementen beispielsweise
					IDs oder CSS-Klassen zugewiesen werden sollen. 
				</para>
				
			</sect3>
			
		</sect2>
		
		<sect2 id="settings.text_converters.use_other_text_converters">
			<title>Eigene Textkonverter integrieren</title>
			
			<warning>
				<para>
					Die API für Textkonverter befindet sich noch unter
					starker Entwicklung und kann sich von Version zu
					Version drastisch ändern.
				</para>
			</warning>
			
			<note>
				<para>
					Wer einen Textkonverter integrieren möchte, sollte mit den
					Grundlagen objektorientierter Programmierung in PHP 5
					vertraut sein. 
				</para>
			</note>
			
			<para>
				Die Integration eines eigenen Textkonverters besteht aus zwei
				Schritten:
			</para>
			
			<orderedlist>
				<listitem>
					<para>
						Die Erstellung eines Textkonverter-Plug-ins.
					</para>
				</listitem>
				<listitem>
					<para>
						Der Registrierung des Textkonverter-Plug-ins.
					</para>
				</listitem>
			</orderedlist>
			
			<sect3 id="settings.text_converters.use_other_text_converters.create_plugin">
				<title>Plug-in erstellen</title>
				
				<para>
					Um ein Textkonverter-Plug-in zu erstellen, werden zwei
					Dinge benötigt:
				</para>
				
				<orderedlist>
					<listitem>
						<para>
							Ein Textkonverter.
						</para>
					</listitem>
					<listitem>
						<para>
							Das eigentliche Plug-in, das für Welcompose
							eine einheitliche API zum Zugriff auf den
							Textkonverter bietet.
						</para>
					</listitem>
				</orderedlist>
				
				<para>
					Wie der Textkonverter aussieht oder was er für Aufgaben
					erledigt, spielt bei der Integration keine Rolle. 
					Er muss einzig eine Zeichenkette übernehmen, die der
					Eingabe des Anwenders entspricht, und diese
					(transformiert) wieder retournieren. Ein funktionsloser
					Prototyp könnte beispielsweise so aussehen:
				</para>
				
				<programlisting language="php"><![CDATA[
class Mein_TextKonverter
{

	public function process ($input)
	{
		return $input;
	}

}
]]></programlisting>
				
				<para>
					Selbstverständlich ist auch eine prozedurale Variante
					möglich:
				</para>
				
				<programlisting language="php"><![CDATA[
function mein_textkonverter ($input)
{
	return $input;
}
]]></programlisting>
				
				<para>
					Wo der Textkonverter abgespeichert wird, spielt ebenfalls
					keine Rolle. Praktisch ist vielleicht ein separates
					Verzeichnis unterhalb von <filename>core/</filename>,
					damit man nicht unabsichtlich &ndash; beispielsweise
					bei einem Update &ndash; den eigenen Textkonverter
					überschreibt.
				</para>
				
				<note>
					<para>
						Die Textkonverter Markdown und Textile, die Welcompose
						mitbringt, sind im Verzeichnis
						<filename>core/third_party/</filename> zu finden.
					</para>
				</note>
				
				<para>
					Mehr Konventionen gilt es dagegen bei den Plug-ins
					einzuhalten:
				</para>
				
				<itemizedlist>
					<listitem>
						<para>
							Die Plug-ins müssen im Verzeichnis
							<filename>core/plugins/textconverters/</filename>
							abgelegt werden.
						</para>
					</listitem>
					<listitem>
						<para>
							Sie müssen der Benennung
							<userinput>wcom_plugin_textconverter_name.php</userinput>
							folgen, wobei <userinput>name</userinput> eine
							Zeichenkette sein muss, die nur aus kleinen
							Buchstaben, Zahlen und Unterstrichen
							(<code>_</code>) bestehen darf.
							<userinput>name</userinput> wird auch für die
							Benennung der Plug-in-Klasse benötigt. Heisst die
							Plug-in-Klasse
							<code>TextConverter_MeinTextKonverter</code>,
							muss man <userinput>MeinTextKonverter</userinput>
							für den Plug-in-Dateinamen wählen, was zum Resultat
							<filename>wcom_plugin_textconverter_meintextkonverter.php</filename>
							führt.
						</para>
					</listitem>
				</itemizedlist>
				
				<para>
					Die Plug-ins selber werden als abgeleitete Klassen
					des XHTML-Textkonverters <code>TextConverter_XHTML</code>
					realisiert. Dabei gilt es, die Methoden neu zu
					implementieren, deren Funktionalität man mit dem neuen
					Textkonverter nutzen möchte.
				</para>
				
				<para>
					Bietet der neue Textkonverter keine passende
					Funktionalität für eine Methode, lässt man diese einfach
					weg. Dann wird automatisch die Implementierung des 
					XHTML-Textkonverters genutzt.
				</para>
				
				<para>
					Die Methode, die man wohl bei jedem Textkonverter neu
					implementiert, dürfte <code>apply()</code> sein. Sie
					dient dazu, einen Textkonverter auf die vom Benutzer
					eingegeben Text anzuwenden. Wenn man den leeren
					Textkonverter-Prototypen von oben benutzen möchte,
					könnte das Plug-in beispielsweise so aussehen:
				</para>
				
				<programlisting language="php"><![CDATA[
require_once('wcom_plugin_textconverter_xhtml.php');
require_once('/pfad/zu/meinem/textkonverter.php');

class TextConverter_MeinTextKonverter extends TextConverter_XHTML
{

	public function apply ($input)
	{
		$tk = new Mein_TextKonverter();
		return $tk->process($input);
	}

}
]]></programlisting>
				
				<para>
					Nun wird der Textkonverter <code>Mein_TextKonverter</code>
					zur Transformation des Texts verwendet.
				</para>
				
				<para>
					Die weiteren Methoden dienen unter anderem dazu,
					die richtige Sytnax für Hilfsfunktionen wie das Einfügen
					eines Links oder eines Bildes aus dem Mediamanager
					bereitzustellen, damit Bilder oder eben Links
					vorformatiert für die Anwender in die Inhalte eingefügt
					werden können.
				</para>
				
				<variablelist>
					<varlistentry>
						<term>mmInsertImage</term>
						<listitem>
							<para>
								Fügt Bilder aus dem Mediamanager ein.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>mmInsertDocument</term>
						<listitem>
							<para>
								Fügt Dokumente aus dem Mediamanger ein.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>mmInsertShockwave</term>
						<listitem>
							<para>
								Fügt Flashfilme aus dem Mediamanager ein.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>mmInsertInternalLink</term>
						<listitem>
							<para>
								Fügt Links zu anderen Welcompose-Seiten ein.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>mmInsertFlickr</term>
						<listitem>
							<para>
								Fügt Bilder aus dem Mediamanager ein, die
								vom Photo-Sharing-Service Flickr stammen.
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				
				<para>
					Als <code>protected</code> oder <code>private</code>
					deklarierte Methoden können ignoriert werden.
				</para>
				
				<para>
					Während die Funktionssignaturen in den abgeleiteten
					Klassen beibehalten werden müssen, ist es nicht nötig,
					auch wirklich alle übergebenen Variablen zu benutzen.
					Sie können verworfen werden, wenn die Syntax des
					Textkonverters ihre Anwendung nicht vorsieht.
				</para>
				
				<para>
					Wie ein fertiges Textkonverter-Plug-in aussieht, zeigen
					die mitgelieferten Plug-ins für Markdown und Textile.
				</para>
				
				<para>
					Bevor man das Textkonverter-Plug-in nutzen kann, muss es
					noch in Welcompose registriert werden (siehe <xref
					linkend="settings.text_converters.use_other_text_converters.register_plugin"/>).
				</para>
				
			</sect3>
			
			<sect3 id="settings.text_converters.use_other_text_converters.register_plugin">
				<title>Plug-in registrieren</title>
				
				<para>
					Um einen neu hinzugefügten Textkonverter im
					Administrationsbereich nutzen zu können, muss er vorab
					registriert werden. Dies geschieht im Bereich
					<guimenu>Einstellungen</guimenu> im Unterpunkt
					<guisubmenu>Textkonverter</guisubmenu>. Wenn Sie dort
					auf den Link <guibutton>Neu anlegen</guibutton> klicken, 
					gelangen Sie zum Formular zum Anlegen eines neuen
					Textkonverters.
				</para>
					
				<figure id="settings.text_converters.use_other_text_converters.register_plugin.add_text_converter">
					<title>Textkonverter hinzufügen</title>
					<graphic fileref="images/settings/text_converters/use_other_text_converters.register_plugin.add_text_converter.png"/>
				</figure>
				
				<variablelist>
					<varlistentry>
						<term><guimenuitem>Name</guimenuitem></term>
						<listitem>
							<para>
								Der Name des Textkonverters, der jeweils
								in den Auswahllisten unterhalb der
								Inhaltsbereiche gezeigt wird. Er kann frei
								gewählt werden.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guimenuitem>Interner Name</guimenuitem></term>
						<listitem>
							<para>
								Interner Name des Textkonverters. Bei einer
								Plug-in-Klasse mit dem Namen 
								<code>TextConverter_MeinTextKonverter</code>
								muss <userinput>MeinTextKonverter</userinput>
								eingegeben werden.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guimenuitem>Standard</guimenuitem></term>
						<listitem>
							<para>
								Wenn aktiv, wird dieser Textkonverter beim Anlegen 
								neuer Seiten als Standard gesetzt.
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				
				<para>
					Sobald das Formular ausgefüllt und abgesendet wurde,
					kann der Textkonverter innerhalb des
					Administrationsbereichs genutzt werden.
				</para>
			</sect3>
		</sect2>
		
		<sect2 id="settings.text_converters.wysiwyg">
			<title>WYSIWYG</title>
			
			<para>
				WYSIWYG- respektive sogenannte Rich-Text-Editoren wie
				TinyMCE oder FCKEditor können mit Welcompose nicht genutzt
				werden.
			</para>
			
			<para>
				Wer trotzdem nicht auf einen WYSIWYG-Editor verzichten will,
				sollte über den Browser Firefox mit Hilfe von Erweiterungen
				mindenstens beschränkte WYSIWYG-Funktionalität erhalten, ohne
				den Quellcode von Welcompose modifizieren zu müssen:
			</para>
			
			<variablelist>
				<varlistentry>
					<term>Xinha Here!</term>
					<listitem>
						<para>
							Xinha Here!<footnote>
							<para>
								<ulink url="https://addons.mozilla.org/de/firefox/addon/1449"/>
							</para>
							</footnote> bindet den WYSIWYG-Editor Xinha<footnote>
							<para>
								<ulink url="http://xinha.webfactional.com/"/>
							</para>
							</footnote> ein.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Mimulus</term>
					<listitem>
						<para>
							Mimulus<footnote>
							<para>
								<ulink url="http://inamidst.com/mimulus/"/>
							</para>
							</footnote> bietet einen schlanken WYSIWYG-Editor.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			
			<para>
				Achten Sie bei der Nutzung einer derartigen Extension einfach
				darauf, dass Sie den Textkonverter XHTML verwenden.
			</para>
			
			<warning>
				<para>
					Die Nutzung dieser oder anderer WYSIWYG-Editoren wird
					nicht empfohlen und nicht unterstützt. Der Mediamanager
					wie andere Hilfsfunktionen können durch die
					WYSIWYG-Editoren in ihrer Funktionalität eingeschränkt
					werden oder mit den Editoren nicht kompatibel sein.
				</para>
			</warning>
			
			<para>
				Eine weitere Erleichterung zum Verfassen von Texten können
				externe Editoren sein, die beispielsweise Syntax-Highlighting
				bieten. Konsultieren Sie dazu <xref
				linkend="templating.templates.usage.edit_templates_with_editor"/>.
			</para>
		</sect2>
		
	</sect1>
	
	<sect1 id="settings.text_macros">
		<title>Textmakros</title>
		
		<sect2 id="settings.text_macros.introduction">
			<title>Einführung</title>
			
			<para>
				Textmakros sind sozusagen die kleinen Geschwister der
				Textkonverter (<xref linkend="settings.text_converters"/>).
				Denn wie die Textkonverter sind sie für die Transformation
				von Text zuständig. Der Unterschied besteht aber darin, 
				dass sie nicht eine komplett eigene Markup-Sprache zur 
				Transformation ganzer Texte definieren, sondern mit einzelnen
				Befehlen eine einzige (kleine) Aufgabe erledigen sollen.
			</para>
			
			<para>
				Wer beispielsweise einen Begriff mit einem Link zur
				Online-Enzyklopädie Wikipedia erklären will, kann
				normalerweise den Link nur in HTML oder mit der Markup-Sprache
				des jeweiligen Textkonverters (Markdown im Beispiel)
				auszeichnen:
			</para>
			
			<programlisting><![CDATA[
[Toxoplasmose](http://de.wikipedia.org/wiki/Toxoplasmose)
]]></programlisting>
			
			<para>
				Dies ist aber umständlicher als nötig, da die Links zur
				Wikipedia immer identisch aufgebaut sind und sich deshalb
				automatisch erstellen liessen. Hier kommen nun die
				Textmakros ins Spiel: Sie können diese Aufgabe übernehmen,
				ohne dass ein bestehender Textkonverter modifiziert respektive
				ergänzt werden muss. So lässt sich ein Textmakro erstellen,
				das beispielsweise aus 
			</para>
			
			<programlisting><![CDATA[
w:de{Toxoplasmose}
]]></programlisting>
			
			<para>
				automatisch den richtigen Link erstellt, wodurch man nicht nur
				weniger tippen, sondern sich auch nicht den Link heraussuchen
				muss.
			</para>
			
			<para>
				Dies funktioniert selbstverständlich nicht nur mit
				Wikipedia-Artikeln, sondern auch mit Telefonnummern oder ISBN
				für Bücher, die man beispielsweise mit seinem
				Amazon-Partnerprogramm verknüpfen kann. Auch lassen sich
				Badges von irgendwelchen Webdiensten integrieren, sofern sie
				sich vernünftig in in ein Textmakro verpacken lassen.
			</para>
			
			<para>
				Weitere Anwendungsmöglichkeiten sind automatische
				Transformationen. Beispielsweise die Codierung von Entitäten
				oder die Entfernung von unerwünschten HTML-Tags.
			</para>
			
		</sect2>
		
		<sect2 id="settings.text_macros.usage">
			<title>Anwendung der Textmakros</title>
			
			<para>
				Textmakros werden wie der Textkonverter von Welcompose
				überall im Webinterface angeboten, wo sich Inhalte für die
				jeweiligen Seiten eingeben lassen. Sie können pro Seite, Blog
				Posting oder Box über eine Checkbox aktiviert werden.
			</para>
			
			<figure id="settings.text_macros.usage.apply_text_macros">
				<title>Textmakros anwenden</title>
				<graphic fileref="images/settings/text_macros/usage.apply_text_macros.png"/>
			</figure>
			
			<para>
				Dies bedeutet, dass entweder alle Textmakros ausgeführt
				werden können oder gar keine.
			</para>
			
			<para>
				Gesteuert werden kann einzig der Anwendungszeitpunkt der
				Textmakros, wobei das global bei der Aktivierung eines
				Textmakros geschieht (siehe <xref
				linkend="settings.text_macros.integrate_other_text_macros"/>). 
			</para>
			
			<para>
				Die Nutzung der Textmakros bei Blog-Kommentaren o.ä. ist
				nicht möglich.
			</para>
			
		</sect2>
		
		<sect2 id="settings.text_macros.builtin_text_macros">
			<title>Mitgelieferte Textmakros</title>
			
			<para>
				Welcompose bringt zwei Textmakros von Haus aus mit, die für
				die Bereitstellung von Welcompose-Funktionalität benötigt
				werden. Sie dienen zur Erzeugung der Links zwischen einzelnen
				Welcompose-Seiten und dem Einbetten von Media-Elementen wie
				Bildern.
			</para>
							
			<note>
				<para>
				Diese beiden mitgelieferten Textmakros dürfen nicht entfernt werden, da sonst die 
				die Auflösung der Pfade in Ihren Seiten nicht mehr funktionieren.
				</para>
			</note>
			
			<sect3 id="settings.text_macros.builtin_text_macros.bundled_media_url_generator">
				<title>Bundled Media URL Generator</title>
				
				<para>
					Der Bundled Media URL Generator kümmert sich um das Setzen
					von Pfaden respektive URLs zu Media-Elementen wie Bildern.
					Er wird vom in Welcompose integrierten Media Manager
					verwendet und soll daher auch nicht gelöscht oder
					deaktiviert werden.
				</para>
				
				<para>
					Er orientiert sich an der Syntax von Smarty-Funktionen,
					wie sie in Vorlagen verwendet werden:
				</para>
				
				<programlisting><![CDATA[
{get_media arg1=value1}
]]></programlisting>
				
				<para>
					Er kennt nur ein einzelnes Argument: <code>id</code>.
					Diesem wird jeweils die ID des Bildes oder Films
					übergebeben, das respektive der eingebunden werden soll:
				</para>
				
				<programlisting><![CDATA[
{get_media id="3"}
]]></programlisting>
				
				<para>
					Anstelle von <code>{get_media ...}</code> setzt das
					Textmakro den Pfad respektive URL zum Media-Element,
					beispielsweise:
				</para>
				
				<programlisting><![CDATA[
/files/global_files/4975b766cb7323f2724213d8b41fe685ca107d71_grafik.gif
]]></programlisting>
				
				<para>
					Allerdings ist es in der Regel nicht nötig, selber die
					Tags für die Integration der Bilder zu schreiben, da dies
					in Welcompose integrierte Funktionen für den Anwender tun.
				</para>
				
			</sect3>
			
			<sect3 id="settings.text_macros.builtin_text_macros.bundled_url_generator">
				<title>Bundled URL Generator</title>
				
				<para>
					Das Textmakro Bundled URL Generator dient zur
					einfachen Erzeugung von Links zwischen den einzelnen
					Welcompose-Seiten und wird beispielsweise von den
					Hilfsfunktionen zum Einfügen interner Hinweise verwendet.
					Es sollte daher auch nicht gelöscht oder deaktiviert
					werden.
				</para>
				
				<para>
					Es bietet ein Interface zum URL-Generator, der auch
					schon innerhalb der Vorlagen zum Einsatz kommt und folgt
					daher dessen Syntax:
				</para>
				
				<programlisting><![CDATA[
{get_url arg1=value1 arg2=value2}
]]></programlisting>
				
				<para>
					Während <code>get_url</code> quasi der Name des
					Textmakros ist, sind <code>arg1</code> respektive
					<code>arg2</code> Platzhalter für Argumente, die an den
					URL-Generator zur Erzeugung der richtigen URLs übergeben
					werden. Eine gültige Anweisung kann beispielsweise so
					aussehen:
				</para>
				
				<programlisting><![CDATA[
{get_url page_id="15" action=ArchiveMonth posting_year_added="2007" posting_month_added="6"}
]]></programlisting>
				
				<para>
					Anstelle von <code>{get_url ...}</code> wird vom
					Textmakro der URL zu dem Archiv für den Monat Juni 2007
					der Blog-Seite mit der ID 15 gesetzt, beispielsweise: 
				</para>
				
				<programlisting><![CDATA[
http://www.example.com/mein-blog/archiv/2007/06/
]]></programlisting>
				
				<para>
					In der Regel ist es nicht nötig, selber die Tags für den
					Bundled Media URL Generator zu schreiben, da dies in 
					Welcompose integrierte Funktionen für den Anwender tun.
				</para>
			</sect3>
		</sect2>
		
		<sect2 id="settings.text_macros.integrate_other_text_macros">
			<title>Eigene Textmakros integrieren</title>
			
			<para>
				Um eigene Textmakros in Welcompose zu integrieren, müssen
				zwei Aufgaben erledigt werden:
			</para>
			
			<orderedlist>
				<listitem>
					<para>
						Die Erstellung des Textmakros.
					</para>
				</listitem>
				<listitem>
					<para>
						Die Aktivierung des Textmakros in Welcompose.
					</para>
				</listitem>
			</orderedlist>
			
			<sect3 id="settings.text_macros.integrate_other_text_macros.create">
				<title>Erstellung eines Textmakros</title>
				
				<para>
					Textmakros werden in Form von einfachen PHP-Funktionen
					realisiert, in deren Rahmen man prinzipiell machen kann,
					was man will. Als Beispiel soll die bereits erwähnte
					automatische Umwandlung von Links zur Wikipedia realisiert
					werden.
				</para>
				
				<para>
					Die Textmakros werden im Verzeichnis
					<filename>core/plugins/textmacros/</filename> hinterlegt,
					wobei pro Textmakro eine separate Datei benötigt wird.
					Die Benennung der Dateien muss einem bestimmten Schema
					erfolgen, damit die Textmakros von Welcompose gefunden
					werden. Und zwar müssen die Dateinamen mit
					<filename>wcom_plugin_textmacro_</filename> beginnen,
					gefolgt vom eigentlichen Textmakro-Namen und der
					Dateiendung <filename>.php</filename>. Der Textmakro-Name
					darf nur kleine Buchstaben, Ziffern und Unterstriche
					beinhalten. Der Dateiname des Wikipedia-Macros könnte
					beispielsweise so aussehen:
					<filename>wcom_plugin_textmacro_wikipedia.php</filename>.
				</para>
				
				<para>
					Der Dateiname dient gleichzeitig (abzüglich des Suffix
					<filename>.php</filename>) als Funktionsname, der
					für den Aufruf des Textmakros verwendet wird.
				</para>
				
				<para>
					Die Textmakros erhalten als einziges Argument die
					Zeichenkette mit den Benutzereingaben, die sie nach
					der Ausführung retournieren müssen. Der funktionslose
					Prototyp einer Textmakro-Funktion sieht damit
					folgendermassen aus: 
				</para>
				
				<programlisting language="php"><![CDATA[
function wcom_plugin_textmacro_name ($input)
{
	return $input;
}
]]></programlisting>
				
				<para>
					Welche Aktionen innerhalb des Textmakros ausgeführt
					werden, bleibt einem selbst überlassen. Meistens wird
					man wohl mit Hilfe von Regulären Ausdrücken die Eingaben
					manipulieren. In jedem Fall gilt es, darauf zu achten,
					dass die Textmakros nicht mit den Textkonvertern in
					Konflikt geraten, insbesondere wenn sie
					<emphasis>nach</emphasis> den Textkonvertern ausgeführt
					werden (mehr dazu in
					<xref linkend="settings.text_macros.integrate_other_text_macros.register"/>). 
				</para>
				
				<para>
					In dem Wikipedia-Beispiel-Textmakro wird eine ebensolche
					Text-Transformation mit Hilfe eines Regulären Ausdrucks
					realisiert. Und zwar sucht die Textmakro-Funtkion
					<code>wcom_plugin_textmacro_wikipedia()</code> nach allen
					nach dem Muster <code>w:de{Begriff}</code> (für die
					deutsche Wikipedia) respektive <code>w:en{Begriff}</code>
					(für die englische Wikipedia) ausgezeichneten Begriffen.
					Diese werden dann mit Hilfe der Callback-Funktion 
					<code>wcom_plugin_textmacro_wikipedia_callback()</code>
					in die Links verwandelt und durch diese ersetzt.
				</para>
				
				<programlisting language="php"><![CDATA[
function wcom_plugin_textmacro_wikipedia ($input)
{
	// input check
	if (!is_scalar($input)) {
		trigger_error("Input for parameter input is expected to be scalar", E_USER_ERROR);
	}

	// parse wikipedia tags and replace them with links to the online encyclopedia.
	return preg_replace_callback("=w:(en|de)\{(.*?)\}=",
		'wcom_plugin_textmacro_wikipedia_callback', $input);
}

function wcom_plugin_textmacro_wikipedia_callback ($args)
{
	// input check
	if (!is_array($args)) {
		trigger_error("Input for parameter args is expected to be an array", E_USER_ERROR);
	}

	// encode the article title into wikipedia's special format used in urls
	$article_url_title = urlencode(str_replace(' ', '_', $args[2]));

	// create wikipedia link
	// argument 1 holds the name of the localized wikipedia to use (either en or de)
	// argument 2 is the urlencoded version of the article title
	// argument 3 is the article title as supplied by the user
	return sprintf('<a href="http://%1$s.wikipedia.org/wiki/%2$s">%3$s</a>', $args[1],
		$article_url_title, $args[2]);
}
]]></programlisting>
				
				<para>
					Sobald das Textmakro unter dem Namen
					<filename>wcom_plugin_textmacro_wikipedia.php</filename>
					im Verzeichnis
					<filename>core/plugins/textmacros/</filename> abgelegt
					wurde, ist es einsatzbereit und muss nur noch in
					Welcompose aktiviert werden.
				</para>
				
			</sect3>
			
			<sect3 id="settings.text_macros.integrate_other_text_macros.register">
				<title>Textmakros registrieren</title>
				
				<para>
					Um ein neu hinzugefügtes Textmakro nutzen zu können, muss
					es vorab registriert werden. Dies geschieht im
					Administrationsbereich unter <guimenu>Settings</guimenu>
					beim Unterpunkt <guisubmenu>Text Macros</guisubmenu>. Wenn
					Sie dort auf den Link <guibutton>Add new</guibutton>
					klicken, gelangen Sie zum Formular zum Anlegen eines neuen
					Textmakros.
				</para>
					
				<figure id="settings.text_macros.integrate_other_text_macros.register.add_text_macro">
					<title>Textmakro anlegen</title>
					<graphic fileref="images/settings/text_macros/integrate_other_text_macros.register.add_text_macro.png"/>
				</figure>
				
				<variablelist>
					<varlistentry>
						<term>Name</term>
						<listitem>
							<para>
								Der Name des Textmakros, der zur
								Identifizierung des Textmakros dient.
								Kann frei gewählt werden.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Internal name</term>
						<listitem>
							<para>
								Interner Name des Macros. Bei einer
								Textmakro-Funktion mit dem Namen 
								<code>wcom_plugin_textmacro_name()</code>
								muss <userinput>name</userinput>
								eingegeben werden, bei
								<code>wcom_plugin_textmacro_wikipedia()</code>
								also <userinput>wikipedia</userinput>.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Type</term>
						<listitem>
							<para>
								Der Typ bestimmt den Zeitpunkt, wann das
								Textmakro im Verhältnis zu den
								Textkonvertern ausgeführt werden soll. Und
								zwar kann man wählen, ob das Textmakro
								<emphasis>vor</emphasis> (<guimenuitem>Startup
								macro</guimenuitem>, <guimenuitem>Pre text
								filter macro</guimenuitem>) oder
								<emphasis>nach</emphasis> (<guimenuitem>Post
								text filter macro</guimenuitem>,
								<guimenuitem>Shutdown Macro</guimenuitem>) dem
								Textkonveter ausgeführt werden soll. Ein
								<guimenuitem>Startup macro</guimenuitem>
								wird dabei vor einem <guimenuitem>Pre text
								filter macro</guimenuitem> ausgeführt, ein
								<guimenuitem>Shutdown macro</guimenuitem> nach
								einem <guimenuitem>Post text filter
								macro</guimenuitem>.
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				
				<para>
					Sobald das Formular ausgefüllt und abgesendet wurde,
					ist das Textmakro aktiv und wird angewendet.
				</para>
			</sect3>
		</sect2>
		
	</sect1>
</chapter>