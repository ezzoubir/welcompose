<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="url_rewriting">
	<title>URL Rewriting</title>
		
		<para>
			Standardmässig verwendet Welcompose parameterisierte URLs, um die
			Inhalte auszuwählen, die angezeigt werden sollen. Ein typischer
			URL zum Aufruf einer Seite sieht beispielsweise so aus:
		</para>

		<programlisting language="php">
<![CDATA[index.php?project_name=default&page_name=produkte&action=Index]]></programlisting>
	
		<para>
			Diese Form von URLs ist weder besonders benutzer- noch
			suchmaschinenfreundlich. Um dies zu ändern, muss an zwei Orten
			Hand angelegt werden: Einmal am Webserver (<xref linkend="url_rewriting.configure.configure_webserver"/>)
			und einmal in der Konfiguration von Welcompose (<xref linkend="url_rewriting.configure.configure_welcompose"/>).
			Dabei werden die parameterisierten URLs quasi auf Verzeichnisse und Dateinamen abgebildet, auch wenn
			diese gar nicht existieren. 
		</para>
	
		<para>
			Den URL
		</para>
	
		<programlisting language="php">
<![CDATA[index.php?project_name=default&page_name=produkte&action=Index]]>
</programlisting>
	
		<para>
			könnte man zum Beispiel so schreiben:
		</para>

		<programlisting language="php">
<![CDATA[/default/produkte/index.php]]>
</programlisting>
		
		<para>
			Das erste Verzeichnis steht für den URL-Parameter <emphasis>project_name</emphasis>, das
			zweite Verzeichnis für den URL-Parameter <emphasis>page_name</emphasis> und der Dateiname
			index.php für den URL-Parameter <emphasis>action</emphasis>. Jetzt weist man den
			Webserver an, die Informationen aus dem URL zu extrahieren und
			den entsprechenden URL-Parametern zuzuweisen.
		</para>
	
		<para>
			Die meisten Webserver - ob Apache, Lighttpd oder Cherokee -
			stellen entsprechende Funktionalität bereit. Dabei wird in einer
			Konfigurationsdatei definiert, welcher Teil des URL auf welchen
			Parameter abgebildet. Verwendet werden dabei Reguläre Ausdrücke
			<footnote>
				<para>
					<ulink
						url="http://de.wikipedia.org/wiki/Reguläre_Ausdrücke" />
				</para>
			</footnote>. So ein Konfigurationssatz wird <emphasis>Rewrite Map</emphasis> genannt.
		</para>
	
		<para>
			Welcompose selber muss zudem dazu angewiesen werden, URLs mit dem korrekten
			Format zu erzeugen. Dies kann über einige wenige Zeilen in der
			Systemkonfiguration (<xref linkend="url_rewriting.configure.configure_welcompose"/>) erledigt werden. 
		</para>
	
	<sect1 id="url_rewriting.configure">
		<title>URL Rewriting konfigurieren</title>

		<para>
			Das Pfadlayout einer Rewrite Map muss nicht immer gleich sein.
			Das heisst, dass man es den eigenen Wünschen anpassen kann,
			solange in der URL alle Parameter definiert sind. Zudem kann der
			Parameter project_name weggelassen werden, wenn Welcompose nur ein
			einzelnes Projekt betreiben soll. Es verwendet dann automatisch das Standard-Projekt.  
		</para>
		
		<para>
			Anhand des oben aufgeführten Beispiels führen wir nun sämtliche Schritte durch, die 
			notwendig sind um das URL Rewriting zu konfigurieren.  
		</para>
		
		<para>
			Wir beginnen damit, Welcompose anzuweisen, die gewünschten URL Formate zu erzeugen. Es
			wird angenommen, dass ein angelegtes Projekt mit Namen <filename>default</filename> und
			eine inhaltliche Seite mit Namen <filename>Produkte</filename> (Seitentyp <emphasis>simple_page_index</emphasis>)
			im System existieren. 
		</para>
	
		<sect2 id="url_rewriting.configure.configure_welcompose">
		 	<title>Welcompose für URL Rewriting konfigurieren</title>
	 	
		 	<para>
		 		Im Pfad <filename>/core/conf/</filename> finden Sie die Konfigurationsdatei
				<filename>sys.inc.php</filename>. Öffnen sie diese in einem Texteditor und
				gehen zum Abschnitt [<emphasis>urls</emphasis>]. Dort sehen Sie in der
				ersten Zeile folgendes:
			</para>
			
			<programlisting language="php">
<![CDATA[simple_page_index = "/index.php?project_name=<project_name>&page_name=<page_name>&action=Index"]]>
</programlisting>

			<para>
				Wird in Welcompose eine Seite mit Seitentyp <emphasis>simple_page_index</emphasis>
				aufgerufen, wird der hier definierte URL benutzt und die Parameterwerte entsprechend
				dem Aufruf eingefügt. Der aufgerufene URL für unser Beispiel würde somit wie folgt aussehen:
			</para>

			<programlisting language="php">
<![CDATA[http://ihre-domain.tld/index.php?project_name=default&page_name=produkte&action=index]]>
</programlisting>
			
			<para>
				Dieses wollen wir jetzt ändern. Wir wählen das Pfadlayout
			</para>
			
			<programlisting language="php">
<![CDATA[/default/produkte/index.php]]>
</programlisting>			

			<para>
				um den URL in einer Ordnerstruktur abzubilden. Ersetzen
				Sie nun in der Konfigurationsdatei die bisherige Zuweisung in der
				<emphasis>sys.inc.php</emphasis> Datei durch:
			</para>
			
			<programlisting language="php">
<![CDATA[simple_page_index = "/<project_name>/<page_name>/"]]>
</programlisting>

			<para>
				Wie man sehen kann, haben wir nichts anderes gemacht, als unser gewünschte Pfadlayout anzugeben
				und die korrespondierenden Parametervariablen anstelle der statischen Namen einzusetzen. 
				Den Parameter <emphasis>Index</emphasis> brauchen wir an dieser Stelle nicht zu berücksichtigen.
			</para>	
			
			<para>
				Damit ist die Konfiguration des URL Rewriting seitens Welcompose auch schon abgeschlossen. 
			</para>						
		</sect2>
		
		
		<sect2 id="url_rewriting.configure.configure_webserver">
			<title>Webserver für URL Rewriting konfigurieren</title>
		 	
		 	<para>
		 		In Apache 1.3.x und 2.x wird das URL Rewriting vom
		 		Apache-Modul mod_rewrite
		 		<footnote>
		 			<para>
		 				<ulink
		 					url="http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html" />
		 			</para>
		 		</footnote>
		 		bereitgestellt. Konfiguriert werden kann das URL
		 		Rewriting in der Server-Konfigurationsdatei <filename>httpd.conf</filename>
		 		oder im jeweiligen Installationsordner von Welcompose in einer
		 		Datei namens <filename>.htaccess</filename>. Wir gehen im Beispiel von einer
		 		schon existierenden <filename>.htaccess</filename> Datei aus.
		 	</para>

		 	<note>
		 		<para>
		 			Das Apache-Modul mod_rewrite ist nicht auf jedem
		 			Webserver aktiviert. Wenn Sie nicht sicher sind, ob
		 			es aktiviert ist, wenden Sie sich bitte an den
		 			Provider-Support.
		 		</para>
		 	</note>
		
			<para>
				Öffnen Sie die <emphasis>.htaccess</emphasis> Datei in einem Texteditor.
				Als erste Anweisung teilen wir den Webserver mit, unsere RewriteMap 
				zu berücksichtigen.
			</para>
	 	
		 	<programlisting><![CDATA[
RewriteEngine on]]>
</programlisting>

			<para>
				Nun schreiben wir die eigentliche Anweisung zur Umformung der URL, so dass
				sie der, in der <emphasis>sys.inc.php</emphasis> Konfigurationsdatei definierten Struktur entspricht.
			</para>
	 	
		 	<programlisting><![CDATA[
RewriteCond     %{REQUEST_URI}  ^/([0-9a-z-]+)/([a-z0-9-_\.]+)(/?)
RewriteRule     ^ index.php?project_name=%1&page_name=%2&action=Index]]>
</programlisting>

			<para>
				Ihr kompletter Eintrag sollte jetzt so aussehen:
			</para>
			
		 	<programlisting><![CDATA[
RewriteEngine on

RewriteCond     %{REQUEST_URI}  ^/([0-9a-z-]+)/([a-z0-9-_\.]+)(/?)
RewriteRule     ^ index.php?project_name=%1&page_name=%2&action=Index]]>
</programlisting>
			
			<para>
				Zur Erläuterung: Tritt die Rewrite Condition 
				<footnote>
		 			<para>
		 				<ulink
		 					url="http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html#rewritecond"/>
		 			</para>
		 		</footnote>
				ein, wird die darauf folgende <emphasis>RewriteRule</emphasis> ausgeführt. In diesen einfachen
				Fall bedeutet dies, dass die Parameter (<emphasis>project_name</emphasis>, <emphasis>page_name</emphasis>)
				mit den variablen Werten aus der Zeichenketten der Rewrite Condition gefüllt werden. Zur
				ausführlicheren Erlärung der Regulären Ausdrücke lesen Sie bitte den 
				<ulink url="http://de.wikipedia.org/wiki/Reguläre_Ausdrücke">Wikipedia-Eintrag</ulink>.  
			</para>
			
		 	<note>
		 		<para>
		 			Achten Sie bitte bei allen Beispielen auf die abgebildeten Leerschritte
		 			zwischen Anweisung und Status, da es sonst zu Serverfehlern kommen kann.
		 		</para>
		 	</note>
	
			<para>
				Hiermit ist die Konfiguration des Webservers für die Nutzung von URL Rewriting abgeschlossen.
				Konfigurieren Sie nun die URLs der korrespondierenden
				<link linkend="reference.list_of_template_types">Seitentypen</link>, in dem Sie die oben beschriebenen
				Schritte wiederholen.
			</para>
		</sect2>
	</sect1>
</chapter>