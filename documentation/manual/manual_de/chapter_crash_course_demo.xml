<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="crash_course_demo">
	<title>Crash-Kurs: Demo-Webseite</title>
	
		<abstract>
			<para>
				Die Erstellung von Webseiten mit Welcompose ist auf den ersten Blick nicht
				ganz einfach. Dies liegt vor allem daran, dass mehrere Komponenten
				an der Anzeige einer Seite mitwirken und konfiguriert werden müssen. In diesem Crash-Kurs geht es darum,
				Sie ohne grosse Umschweife an die Erstellung einer einfachen 
				Webseite heranzuführen, ohne sich zu intensiv mit dem Wieso und Warum
				zu beschäftigen. Allerdings sind an vielen Stellen die ausführlichen
				Beschreibungen, die an anderer Stelle in diesem Handbuch vorkommen,
				referenziert.
			</para>
		</abstract>	
				
		<para>
			Zur Umsetzung haben wir eine Test-Webseite erstellt, die weder besonders
			hübsch noch besonders aussergewöhnlich ist, dafür einfach genug, um
			nicht den Blick auf das Wesentliche zu trüben &ndash; die Bedienung
			von Welcompose.
		</para>
			
		<figure id="crash_course_demo.demo_website">
			<title>Screenshot der Demo-Webseite</title>
			<graphic fileref="images/crash_course_demo/frontend/view_demo_website.png"/>
		</figure>
				
		<para>
			Die wichtigsten Code-Fragmente sind auch hier im Handbuch zu finden. 
			Sie sollten zum Verständnis des Vorgehens ausreichend sein, sind aber
			nicht komplett, sodass sich nicht die gesamte Demo-Webseite damit
			nachvollziehen lässt. Wer alle Schritte komplett nachvollziehen möchte,
			kann den Quellcode der Demo-Webseite vom Welcompose-Download-Server beziehen.
		</para>
	
		<note>
			<para>
				Sollten Sie Probleme beim Verständnis der Beispiele haben,
				schlagen Sie bitte die Detail-Erklärungen im Handbuch nach. Sollte
				dies nicht ausreichen, können Sie sich an die User-Community in unseren Foren
				wenden. Dort sind viele Leute versammelt, die bereits mit
				Welcompose arbeiten und Ihnen bei Ihren Verständnisproblemen helfen
				können.
			</para>
		</note>
	
	<sect1 id="crash_course_demo.preparation">
		<title>Vorbereitungen</title>
		
		<para>
			Wer sich die Demo-Webseite anschaut, sieht, dass sie einfach
			aufgebaut ist: Eine Navigation oben, drei Inhaltsseiten mit
			Fliesstext und ein Kontaktformular. Bevor damit begonnen werden
			kann, die Navigation und die einzelnen Seiten anzulegen, muss
			zuerst ein <emphasis>Template Set</emphasis> erzeugt
			werden &ndash; denn ohne <emphasis>Template Set</emphasis>
			kann keine Seite angelegt werden.
		</para>
		
		<para>
			Um ein <emphasis>Template Set</emphasis> anzulegen,
			klicken Sie zuerst auf den Navigationspunkt
			<guimenu>Templating</guimenu> und dann auf den Unterpunkt
			<guisubmenu>Template Sets</guisubmenu>. Von dort gelangen Sie über
			den Link <guibutton>Add new</guibutton> zur Eingabemaske, um ein
			neues <emphasis>Template Set</emphasis> anzulegen. 
		</para>
		
	<figure id="crash_course_demo.preparation.templatesets_add">
		<title>Template Set hinzufügen</title>
		<graphic fileref="images/crash_course_demo/templatesets_add.png"/>
	</figure>
		
		<variablelist>
			<varlistentry>
				<term>
					<guilabel>Name</guilabel>
				</term>
				<listitem>
					<para>
						Geben Sie in das Feld einen
						Namen für das <emphasis>Template Set</emphasis>
						an. Wählen Sie einen möglichst beschreibenden Namen
						wie <userinput>Standardaussehen</userinput>. 
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<guilabel>Description</guilabel>
				</term>
				<listitem>
					<para>
						In dieses Feld können
						Sie optional einen Beschreibungstext für das
						<emphasis>Template Set</emphasis> angeben,
						der dessen Verwendungszweck näher beschreibt. Dies
						bietet sich bei der Verwendung von nur einem
						<emphasis>Template Set</emphasis> wie jetzt
						weniger an, kann bei grösseren Webseiten mit vielen
						<emphasis>Template Sets</emphasis> aber
						praktisch sein.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			Klicken Sie nun auf die Schaltfläche <guibutton>Add template
			set</guibutton>, um das <foreignphrase>Template Set</foreignphrase>
			anzulegen.
		</para>
	</sect1>
	
	<sect1 id="crash_course_demo.create_pages">
		<title>Seiten anlegen</title>
		
		<para>
			Nachdem das erste <emphasis>Template Set</emphasis>
			angelegt wurde, kann mit der eigentlichen Arbeit begonnen werden.
			Zuerst muss die erste und einzige Navigation angelegt
			werden. Klicken Sie dazu auf den Navigationspunkt
			<guimenu>Contents</guimenu> und dann auf den Unterpunkt
			<guisubmenu>Navigations</guisubmenu>. Von dort aus gelangen Sie über
			den Link <guibutton>Add new</guibutton> zur Eingabemaske, um 
			eine Navigation zu erzeugen.
		</para>
		
		<figure id="crash_course_demo.create_navigation">
			<title>Navigation anlegen</title>
			<graphic fileref="images/crash_course_demo/create_navigation.png"/>
		</figure>
		
		<variablelist>
			<varlistentry>
				<term>
					<guilabel>Name</guilabel>
				</term>
				<listitem>
					<para>
						Geben Sie hier einen
						Namen für die Navigation ein an. Wählen Sie einen
						möglichst beschreibenden Namen wie
						<userinput>Hauptnavigation</userinput>. 
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			Klicken Sie dann auf die Schaltfläche <guibutton>Add
			navigation</guibutton>, um die Navigation anzulegen.
		</para>
		
		<para>
			Um die vier Seiten <emphasis>Startseite</emphasis>, <emphasis>Inhalt</emphasis>, <emphasis>Kontakt</emphasis> und <emphasis>Impressum</emphasis>
			anzulegen, müssen Sie zum Menupunkt <guisubmenu>Pages</guisubmenu>
			wechseln. Dort sollten Sie bereits die &ndash; noch leere &ndash;
			Hauptnavigation sehen. Lassen Sie sich dabei von der Warnung
			<computeroutput>Please define an index page!</computeroutput> nicht
			verwirren; sie verschwindet, sobald die erste Seite angelegt wurde.
			Über das grüne Symbol unter der Überschrift <guibutton>Add</guibutton>
			gelangen Sie zur Eingabemaske, um die Seiten anzulegen. Wir
			beginnen mit der Seite <emphasis>Startseite</emphasis>.
		</para>
		
		<figure id="crash_course_demo.create_page_metadata">
			<title>Neue Seite anlegen</title>
			<graphic fileref="images/crash_course_demo/create_page_metadata.png"/>
		</figure>
		
		<variablelist>
			<varlistentry>
				<term>
					<guilabel>Position</guilabel>
				</term>
				<listitem>
					<para>
						Die Position bestimmt, wie die neue Seite in
						Relation zum Menüpunkt, neben dem der Anwender auf
						das Symbol zum Hinzufügen einer Seite geklickt hat,
						in die Navigation eingefügt wird. Belassen Sie die
						Auswahl bei der Option <guimenuitem>Create node
						below</guimenuitem>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<guilabel>Name</guilabel>
				</term>
				<listitem>
					<para>
						Geben Sie hier die Beschriftung des Menüpunkts ein,
						also <userinput>Startseite</userinput>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<guilabel>Type</guilabel>
				</term>
				<listitem>
					<para>
						Der Seitentyp bestimmt, welche Inhalte in der Seite
						gespeichert werden können. Da es sich um eine Seite
						handelt, die nur aus Fliesstext besteht, wählen
						Sie <guimenuitem>WCOM_SIMPLE_PAGE</guimenuitem> aus.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<guilabel>Template set</guilabel>
				</term>
				<listitem>
					<para>
						Mit dem <emphasis>Template Set</emphasis> wird
						bestimmt, welche Vorlagen zur Anzeige der Seite
						verwendet werden sollen. Wählen Sie hier das
						<emphasis>Template Set</emphasis> aus,
						das wir im <xref linkend="crash_course_demo.preparation"/>
						angelegt haben, also
						<userinput>Standardaussehen</userinput>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<guilabel>Index page</guilabel>
				</term>
				<listitem>
					<para>
						Setzen Sie hier einen Haken, um festzulegen, dass die
						<emphasis>Startseite</emphasis> als erste Seite
						angezeigt werden soll, wenn Ihre Homepage aufgerufen
						wird.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			Die Felder <guilabel>Protect</guilabel> und
			<guilabel>Groups</guilabel> benötigen wir zur Umsetzung der
			Demo-Webseite nicht, darum können sie vorerst beiseite gelassen
			werden. Klicken Sie jetzt auf <guibutton>Add page</guibutton>, 
			um die Seite hinzuzufügen. Sie kommen dann zur Seitenübersicht
			zurück und sollten die <emphasis>Startseite</emphasis> als
			erste Seite in der Hauptnavigation sehen.
		</para>
		
		<figure id="crash_course_demo.created_pages_first">
			<title>Angelegte Startseite</title>
			<graphic fileref="images/crash_course_demo/created_pages_first.png"/>
		</figure>
		
		<para>
			Nun muss für die Seite <emphasis>Inhalte</emphasis> die Prozedur wiederholt werden.
			Klicken Sie wieder auf das grüne Symbol unter der
			Spaltenüberschrift <guibutton>Add</guibutton> in der Zeile der
			Seite (hier die <emphasis>Startseite</emphasis>), an deren Position sich die neue Seite orientieren soll.
		</para>
		
		<para>
			Sie kommen wieder
			zur Eingabemaske. Belassen Sie das Feld
			<guilabel>Position</guilabel> wieder in der Standard-Auswahl
			<guimenuitem>Create node below</guimenuitem>. Geben Sie beim
			Feld <guilabel>Name</guilabel> den Namen der Seite, hier <userinput>Inhalte</userinput>, ein.
			Wählen Sie bei <guilabel>Type</guilabel> wiederum den Seiten-Typ
			<emphasis>WCOM_SIMPLE_PAGE</emphasis> aus und bei
			<guilabel>Template set</guilabel> unser 
			Template Set <emphasis>Standardaussehen</emphasis>. Die restlichen Felder
			können Sie so belassen, wie sie sind.
		</para>

		<warning>
			<para>
				Setzen Sie keinen Haken mehr beim Feld
				<guilabel>Index page</guilabel>. Pro Webseite kann es nur
				eine Index page geben und
				dies ist schon die Seite <emphasis>Startseite</emphasis>.
			</para>
		</warning>
		
		<para>
			Nach dem Klick auf die Schaltfläche <guibutton>Add page</guibutton>
			gelangen Sie wieder auf die Seitenübersicht. Sie sehen nun 
			die Seite <emphasis>Inhalte</emphasis> unter der Seite
			<emphasis>Startseite</emphasis>, allerdings um eine Ebene
			eingerückt. Um sie auszurücken, klicken Sie auf der Zeile
			der Seite <emphasis>Inhalte</emphasis> unter
			<guibutton>Move</guibutton> auf den Pfeil nach unten. 
		</para>
		
		<para>
			Wiederholen Sie nun diese Schritte für die noch anzulegenden Seiten <emphasis>Impressum</emphasis>
			und <emphasis>Kontakt</emphasis>. 
		</para>
		
		<note>
			<para>
				Achten Sie beim
				Kontakt-Formular darauf, als Seitentyp
				<guimenuitem>WCOM_SIMPLE_FORM</guimenuitem> auszuwählen.
			</para>
		</note>
		
		<para>
			Nach Anlegen aller Seiten sollte die Seitenübersicht wie folgt aussehen: 
		</para>
		
		<figure id="crash_course_demo.created_pages_all">
			<title>Angelegte Seiten</title>
			<graphic fileref="images/crash_course_demo/created_pages_all.png"/>
		</figure>
	</sect1>
	
	<sect1 id="crash_course_demo.fill_homepage_with_contents">
		<title>Startseite mit Inhalten füllen</title>
		
		<para>
			Jetzt ist es Zeit, die Startseite mit Inhalten zu befüllen.
			Suchen Sie dazu in der Navigationsstruktur nach der Zeile
			mit dem Eintrag <emphasis>Startseite</emphasis> und klicken
			Sie daneben auf das Symbol in der Spalte <guibutton>Edit</guibutton>.
			Sie gelangen damit zur Eingabemaske.
		</para>
		
		<figure id="crash_course_demo.pages_edit_contents">
			<title>Inhalte der Startseite hinzufügen</title>
			<graphic fileref="images/crash_course_demo/pages_simplepage_edit.png"/>
		</figure>
		
		<variablelist>
			<varlistentry>
				<term><guilabel>Title</guilabel></term>
				<listitem>
					<para>
						Dieses Feld bestimmt den Seitentitel. Standardmässig
						wird der Name des Navigationspunkts, in diesem Fall
						also <emphasis>Startseite</emphasis> verwendet.
						Ersetzen Sie ihn nun durch
						<userinput>Willkommen zur Demo!</userinput>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Content</guilabel></term>
				<listitem>
					<para>
						Hier kommt der Fliesstext für die Seite hinein. Fügen
						Sie ein paar Zeilen Beispieltext wie 
						<ulink url="http://lipsum.com/">Lorem Ipsum</ulink> ein
						&ndash; zwei Abschnitte sind eine gute Wahl.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Text converter</guilabel></term>
				<listitem>
					<para>
						Wählen Sie aus der Liste den Eintrag
						<guimenuitem>Textile</guimenuitem> aus.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Apply text macros</guilabel></term>
				<listitem>
					<para>
						Setzen Sie hier einen Haken in die Checkbox.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			Das Feld <guilabel>Custom meta tags</guilabel> können Sie für
			den Moment ignorieren und auf die Schaltfläche 
			<guibutton>Update page</guibutton> klicken. Die Inhalte werden
			nun gespeichert und Sie wieder zur Seitenübersicht weitergeleitet.
		</para>
		
		<para>
			Wenn Sie nun den öffentlichen Bereich von Welcompose aufrufen, werden
			Sie sehen, dass noch keine Inhalte angezeigt werden, sondern
			eine Fehlermeldung. Dies liegt daran, dass noch keine Vorlage
			vorhanden ist, was im
			<xref linkend="crash_course_demo.connect_homepage_with_template"/> behoben wird.
		</para>
		
		<figure id="crash_course_demo.frontend.view_error">
			<title>Ausgabe: Fehlermeldung</title>
			<graphic fileref="images/crash_course_demo/frontend/view_error.png"/>
		</figure>
	</sect1>
	
	<sect1 id="crash_course_demo.connect_homepage_with_template">
		<title>Startseite mit Vorlage verbinden</title>
		
		<para>
			Um die Startseite mit einer Vorlage zu verbinden, müssen Sie in den
			Bereich <guimenu>Templating</guimenu> wechseln und zwar zum
			Unterabschnitt <guisubmenu>Templates</guisubmenu>. Klicken Sie dann
			auf <guibutton>Add new</guibutton>, um zur Eingabemaske zum
			Anlegen einer Vorlage zu gelangen. Diese muss nun befüllt werden.
		</para>
		
		<figure id="crash_course_demo.templates_add">
			<title>Vorlage anlegen</title>
			<graphic fileref="images/crash_course_demo/templates_add.png"/>
		</figure>
		
		<variablelist>
			<varlistentry>
				<term><guilabel>Type</guilabel></term>
				<listitem>
					<para>
						Dient zur Zuordnung des Vorlagen-Typs. Wählen Sie
						den Eintrag <guimenuitem>simple_page_index</guimenuitem>
						aus.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Name</guilabel></term>
				<listitem>
					<para>
						Name der Vorlage. Dient zur späteren Identifizierung
						derselben. Geben Sie einen beschreibenden Namen wie
						<userinput>Vorlage Inhaltsseiten</userinput> ein.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Description</guilabel></term>
				<listitem>
					<para>
						Hier können sie optional den Zweck der Vorlage
						beschreiben.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Content</guilabel></term>
				<listitem>
					<para>
						In dieses Feld gehört der HTML-Code für die Vorlage.
						Öffnen Sie die Datei <filename>index.html</filename>
						aus dem Demo-Webseiten-Paket, das Sie von unserem
						Download-Server heruntergeladen haben, und kopieren
						Sie den gesamten HTML-Code in das Textfeld.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Sets</guilabel></term>
				<listitem>
					<para>
						Mit diesem Feld wird die Vorlage einem Vorlagen-Set
						zugeordnet. Klicken Sie auf die Option 
						<guimenuitem>Standardaussehen</guimenuitem>.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			Klicken Sie nun auf die Schaltfläche
			<guibutton>Add template</guibutton>,um die Vorlage zu speichern.
			Wenn Sie jetzt den öffentlichen Bereich aufrufen, werden Sie jetzt
			den gerenderten HTML-Code sehen, den Sie soeben in die Vorlage
			eingefügt haben &ndash; allerdings ohne Bilder und Style
			Sheets.
		</para>
		
		<figure id="crash_course_demo.frontend.view_raw_template">
			<title>Ausgabe: Original Demo HTML</title>
			<graphic fileref="images/crash_course_demo/frontend/view_raw_template.png"/>
		</figure>
		
		<para>
			Nun geht es darum, dass die Inhalte angezeigt werden, die vorher
			in der Datenbank abgelegt wurden. Gehen Sie dazu zur
			Vorlagen-Übersicht zurück und klicken Sie beim soeben angelegten
			Template auf das Symbol unter der Überschrift 
			<guibutton>Edit</guibutton>. Sie kommen dann wieder zur Eingabemaske
			zurück.
		</para>
		
		<para>
			Zuerst wird der Title-Tag geändert. Er soll statt
			<userinput>Welcompose - Hello World!</userinput> zuerst den
			Namen des aktuellen Navigationspunkts und dann den Webseiten-Namen
			enthalten. Ersetzen Sie dazu den Title-Tag durch folgenden Code:
		</para>
		
		<programlisting language="smarty"><![CDATA[
<title>{$page.name} &ndash; Demo-Webseite</title>
]]></programlisting>

		<para>
			Wenn Sie nun auf die Schaltfläche <guibutton>Update
			template</guibutton> klicken, wird die Vorlage gespeichert und Sie
			können die Ausgabeseite neu laden. Wenn Sie alles richtig gemacht
			haben, wird als Seitentitel <emphasis>Startseite &ndash;
			Demo-Webseite</emphasis> angezeigt.
		</para>
		
		<para>
			Ändern wir nun Titel und Fliesstext. Ersetzen Sie den H1-Tag durch
			den Seitentitel und den Fliesstext, indem Sie den Bereich von
			<markup role="smarty"><![CDATA[<div id="content">]]></markup> bis zum Kommentar
			<markup role="smarty"><![CDATA[<!-- content -->]]></markup> durch folgenden Code
			austauschen:
		</para>
		
		<programlisting language="smarty"><![CDATA[
<div id="content">
	<h1>{$simple_page.title}</h1>
	{$simple_page.content}
<!-- content --></div>
]]></programlisting>

		<para>
			Wenn Sie nun die Vorlage wieder speichern und die Ausgabe neu
			laden, sollten Sie als Überschrift den Seitentitel und als
			Inhalt den Fliesstext sehen, die Sie vor kurzem in die Datenbank
			eingefügt haben. 
		</para>
		
		<para>
			Jetzt gilt es noch dafür zu sorgen, dass die Navigation von
			Welcompose erzeugt wird. Ersetzen Sie dazu die Liste in
			<markup role="smarty"><![CDATA[<div id="navi">]]></markup> durch folgenden Code:
		</para>
		
		<programlisting language="smarty"><![CDATA[
<ul>
{select_named ns="Content" class="Page" method="selectPages" var="pages"}
{foreach from=$pages item=_page}
	{if $_page.id == WCOM_CURRENT_PAGE}
		<li class="on">{$_page.name}</li>
	{else}
		<li><a href="{get_url page_id=$_page.id}">{$_page.name}</a></li>
	{/if}
{/foreach}
</ul>
]]></programlisting>

		<para>
			Nachdem Sie die Vorlage wieder gespeichert haben, können Sie
			die Ausgabeseite nochmals laden, worauf jetzt auch die Navigation
			von Welcompose erzeugt wird. Jetzt ist es Zeit, Style Sheets und Logos
			einzubinden, was im <xref linkend="crash_course_demo.style_homepage"/>
			geschieht.
		</para>
		
		<figure id="crash_course_demo.frontend.view_edited_template">
			<title>Ausgabe: Editierte Vorlage</title>
			<graphic fileref="images/crash_course_demo/frontend/view_edited_template.png"/>
		</figure>
	</sect1>
	
	<sect1 id="crash_course_demo.style_homepage">
		<title>Logos und Style Sheets einbinden</title>
		
		<para>
			Wie die Vorlagen müssen auch Style Sheets über die Admin-Oberfläche
			verwaltet werden. Um das Style Sheet für die Demo-Seite zu
			integrieren, müssen Sie zum Untermenu <guisubmenu>Global
			Templates</guisubmenu> des Menus <guimenu>Templates</guimenu> wechseln. Klicken Sie dort auf
			<guibutton>Add new</guibutton>, um zur Eingabemaske zu gelangen
		</para>
		
		<figure id="crash_course_demo.globaltemplate_add">
			<title>Stylesheet hochladen</title>
			<graphic fileref="images/crash_course_demo/globaltemplate_add.png"/>
		</figure>
		
		<variablelist>
			<varlistentry>
				<term><guilabel>Name</guilabel></term>
				<listitem>
					<para>
						Geben Sie hier den Namen des Style Sheets an. Da das 
						Style Sheet in den Vorlagen über den Namen referenziert
						wird, empfiehlt es sich, "Dateinamen" wie
						<filename>style.css</filename> zu verwenden.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Description</guilabel></term>
				<listitem>
					<para>
						Hier können Sie eine optionale Beschreibung für
						die Style-Sheet-Datei eingeben.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Content</guilabel></term>
				<listitem>
					<para>
						Kopieren Sie in dieses Feld die Inhalte der
						<filename>wcom1.css</filename> hinein.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>MIME Type</guilabel></term>
				<listitem>
					<para>
						Wählen Sie den Eintrag
						<guimenuitem>text/css</guimenuitem> aus der Liste
						aus.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Change delimiter</guilabel></term>
				<listitem>
					<para>
						Setzen Sie einen Haken, da sonst die geschweiften
						Klammern in den Style Sheets vor Fehler sorgen.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			Klicken Sie nun auf die Schaltfläche <guibutton>Add global
			template</guibutton>, um die CSS-Datei zu speichern.
		</para>
		
		<para>
			Nun kann die CSS-Datei mit der Vorlage verknüpft werden.
			Gehen Sie dazu wieder zurück zur Eingabemaske für die
			Vorlage, die Sie vorher angelegt haben. Suchen Sie nach der
			Referenzierung der Style-Sheet-Datei:
		</para>
		
		<programlisting language="smarty"><![CDATA[
<link type="text/css" rel="stylesheet" href="styles/wcom1.css" media="screen, projection" />
]]></programlisting>

		<para>
			Löschen Sie nun die Referenz auf die Datei
			<filename>styles/wcom1.css</filename> und platzieren Sie den
			Cursor zwischen den Anführungszeichen. Klicken Sie nun auf
			den Link <guibutton>Reference Global Template</guibutton> über
			dem Textfeld. Es öffnet sich ein Pop-up, in dem die bisher
			angelegten Global Files gelistet werden. Klicken Sie auf die
			soeben angelegte <filename>style.css</filename>, worauf sich das
			Pop-up schliesst und der Code 
			<markup>{global_template name="style.css"}</markup> als
			Style-Sheet-Referenz eingefügt wird. Die gesamte Anweisung
			sieht nun so aus:
		</para>
		
		<programlisting language="smarty"><![CDATA[
<link type="text/css" rel="stylesheet" href="{global_template name="style.css"}"
	media="screen, projection" />
]]></programlisting>

		<para>
			Speichern Sie die Vorlage und aktualisieren Sie die Ausgabeseite.
			Wenn Sie alles richtig gemacht haben, sollten die Inhalte jetzt
			"gestylt" sein (siehe
			<xref linkend="crash_course_demo.frontend.view_page_with_stylesheet"/>).
		</para>
		
		<figure id="crash_course_demo.frontend.view_page_with_stylesheet">
			<title>Ausgabe: Startseite mit verknüpftem Style Sheet</title>
			<graphic fileref="images/crash_course_demo/frontend/view_page_with_stylesheet.png"/>
		</figure>
		
		<para>
			Nun muss noch das Logo eingebunden wird. Wechseln dazu im Menu <guimenu>Templating</guimenu> zum
			Untermenu <guisubmenu>Global Files</guisubmenu> und klicken
			Sie dort auf <guibutton>Add new</guibutton>, um zur Eingabemaske
			zu gelangen.
		</para>
		
		<figure id="crash_course_demo.globalfile_add">
			<title>Logo hochladen</title>
			<graphic fileref="images/crash_course_demo/globalfile_add.png"/>
		</figure>
		
		<variablelist>
			<varlistentry>
				<term><guilabel>File</guilabel></term>
				<listitem>
					<para>
						Auswahl für die Datei, die von der Anwenderfestplatte
						auf den Server hochgeladen werden soll. Wählen Sie die
						Datei <filename>images/logo.jpg</filename> aus dem
						Paket der Demo-Webseite aus.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Description</guilabel></term>
				<listitem>
					<para>
						Optionale Beschreibung der hochzuladenden Datei.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			Klicken Sie auf die Schaltfläche <guibutton>Add global
			file</guibutton>, um das Logo hochzuladen. Kehren Sie dann wieder
			zur Vorlage zurück und suchen Sie den Code für die Einbindung des
			Logos:
		</para>
		
		<programlisting language="smarty"><![CDATA[
<a href="index.html" title="zur Startseite"><img src="images/logo.jpg"
	width="193" height="31" alt=">Ihr Logo" /></a>
]]></programlisting>

		<para>
			Entfernen Sie nun die Referenz <filename>images/logo.jpg</filename>
			und setzen Sie den Cursor zwischen die beiden Anführungszeichen,
			bevor Sie auf <guibutton>Reference Global File</guibutton> klicken.
			Es öffnet sich ein Pop-up, das die vorhandenen Global Files listet.
			Wählen Sie das soeben hochgeladene Logo aus, indem sie auf dessen
			Namen klicken. Das Pop-up schliesst sich und es wird der Code
			<markup>{global_file name="logo.jpg"}</markup> eingesetzt. Der gesamte
			Code zur Einbindung des Logos sieht nun so aus:
		</para>
		
		<programlisting language="smarty"><![CDATA[
<a href="index.html" title="zur Startseite"><img src="{global_file name="logo.jpg"}"
	width="193" height="31" alt=">Ihr Logo" /></a>
]]></programlisting>

		<para>
			Speichern Sie nun die Vorlage und laden Sie die Ausgabeseite
			neu &ndash; die Startseite erscheint nun mit Logo (siehe
			<xref linkend="crash_course_demo.frontend.view_page_with_logo"/>).
		</para>
		
		<figure id="crash_course_demo.frontend.view_page_with_logo">
			<title>Ausgabe: Startseite mit Logo</title>
			<graphic fileref="images/crash_course_demo/frontend/view_page_with_logo.png"/>
		</figure>
	</sect1>
	
	<sect1 id="crash_course_demo.style_homepage_content">
		<title>Inhalte der Startseite gestalten</title>
		
		<para>
			Wie man in <xref linkend="crash_course_demo.demo_website"/> sieht,
			gehören zum Fliesstext Untertitel und ein Bild. Dies soll nun
			nachgetragen werden. Wechseln Sie dazu wieder zum Menu
			<guimenu>Contents</guimenu> und dann zum Untermenu
			<guisubmenu>Pages</guisubmenu>. Klicken Sie dort auf das Symbol
			zum Editieren der Startseite.
		</para>

		<note>
			<para>
				Alle folgenden Beispiele setzen den, beim Anlegen der <emphasis>Startseite</emphasis> ausgewählten Text-Konverter
				<emphasis>Textile</emphasis> voraus. Weitere Information erhalten Sie im Kapitel xxx.
			</para>
		</note>
				
		<para>
			Zuerst kümmern wir uns um die Textformatierung. Trennen Sie die
			ersten zwei Sätze des ersten Abschnitts mit zwei Zeilenumbrüchen
			von dem Rest des Abschnitts ab. Setzen Sie nun das Code-Fragment
			<markup>p(teaser). </markup>  davor, um dem P-Tag, der den ersten
			Abschnitt einschliesst, die CSS-Klasse <emphasis>teaser</emphasis>
			mitzugeben.
		</para>
		
		<warning>
			<para>
				 Achten Sie dabei darauf, dass Sie nach dem Punkt bei
				<markup>p(teaser). </markup> das Leerzeichen nicht vergessen,
				da sonst die Anweisung nicht funktioniert!
			</para>
		</warning>
		
		<para>
			Nun müssen wir noch den Untertitel setzen. Setzen Sie den Cursor
			an das Ende vom ersten Abschnitt, geben Sie zwei Zeilenumbrüche
			ein und fügen dann den Code <markup>h2. Das ist ein Untertitel</markup>
			ein. Die ersten zwei Abschnitte des Fliesstextes sollten nun so
			aussehen:
		</para>
		
		<programlisting language="textile"><![CDATA[
p(teaser). Lorem ipsum dolor sit amet, consectetuer adipiscing elit. In
consequat dolor id elit. Pellentesque habitant morbi tristique senectus et
netus et malesuada fames ac turpis egestas.

h2. Das ist ein Untertitel

Cras urna. Cum sociis natoque penatibus et magnis dis parturient montes,
nascetur ridiculus mus. Nam egestas porttitor nisl. Aenean dapibus dictum
magna...
]]></programlisting>
		
		<para>
			Speichern Sie nun die Seite und laden die Ausgabeseite neu.
			Der erste Abschnitt sollte nun von
			<markup><![CDATA[<p class="teaser">]]></markup> eingeschlossen und 
			orange sein. Auf ihn folgt dann der Untertitel H2, darunter der unbearbeitete Fliesstext.
		</para>
		
		<figure id="crash_course_demo.frontend.view_with_format">
			<title>Ausgabe: Mit formatierten Text</title>
			<graphic fileref="images/crash_course_demo/frontend/view_with_format.png"/>
		</figure>
		
		<para>
			Nachdem dies geschafft ist, kommt nun das Bild hinzu. Öffnen Sie
			dazu wieder die Startseite und setzen Sie den Cursor nach
			die Anweisung <markup>p(teaser). </markup> beim ersten Abschnitt. Geben
			Sie nun zwei Ausrufezeichen ein (<markup>!!</markup>) und platzieren
			Sie den Cursor zwischen den beiden Ausrufezeichen.
		</para>
		
		<para>
			Gehen Sie nun zum <emphasis role="strong">Media Manager</emphasis> rechts neben dem Textfeld. Klicken
			Sie dort auf <guibutton>Upload</guibutton>. Es öffnet sich ein Pop-up.
		</para>
		
		<figure id="crash_course_demo.mediamanager.upload_popup">
			<title>Mediamanager Bild hochladen</title>
			<graphic fileref="images/crash_course_demo/mediamanager_upload_popup.png"/>
		</figure>
		
		<variablelist>
			<varlistentry>
				<term><guilabel>File</guilabel></term>
				<listitem>
					<para>
						Dient zur Auswahl des Bildes, das hochgeladen werden
						soll. Wählen Sie das Bild
						<filename>images/physalis.jpg</filename> aus, das 
						Bestandteil der Demo-Webseite ist.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Description</guilabel></term>
				<listitem>
					<para>
						Hier können Sie eine optionale Beschreibung des
						Bildes eingeben.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Tags</guilabel></term>
				<listitem>
					<para>
						Geben Sie hier Schlüsselwörter ein, die ihnen beim
						Wiederfinden des Bildes helfen, jeweils getrennt durch
						ein Komma. Beispiel:
						<userinput>Physalis, Blume, orange</userinput>.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			Klicken Sie nun auf <guibutton>Upload Media</guibutton>, um 
			das Bild hochzuladen. Nach erfolgreichen Hochladen des Bildes, schließen
			Sie bitte über <guibutton>Close</guibutton> das Fenster. Sie sehen nun
			eine verkleinerte Version des Bildes rechts im Mediamanager.
		</para>
		
		<para>
			Klicken Sie nun auf die verkleinerte Version des Bildes und es wird
			der Code <markup>{get_media id="1"}</markup> zwischen die beiden
			Ausrufezeichen eingefügt. Der ganze erste Abschnitt sieht nun so
			aus:
		</para>
		
		<programlisting language="textile"><![CDATA[
p(teaser). !{get_media id="1"}! Lorem ipsum dolor sit amet, consectetuer
adipiscing elit. In consequat dolor id elit. Pellentesque habitant morbi
tristique senectus et netus et malesuada fames ac turpis egestas.
]]></programlisting>
		
		<note>
			<para>
				Bei der Bildreferenz <markup>{get_media id="1"}</markup> kann
				der Wert der Bild-ID abweichen, wenn Sie bereits vorher
				Bilder in den Mediamanager eingefügt haben. Eine Referenz
				wie <markup>{get_media id="32"}</markup> kann somit auch korrekt
				sein.
			</para>
		</note>
		
		<para>
			Speichern Sie nun die Webseite und laden die Ausgabeseite. Sie
			sollen nun das Resultat Ihrer Anpassungen samt Bild sehen (siehe
			<xref linkend="crash_course_demo.frontend.view_with_image"/>).
		</para>
		
		<figure id="crash_course_demo.frontend.view_with_image">
			<title>Startseite mit Bild, Teaser, Untertitel und unbearbeiteten Fliesstext</title>
			<graphic fileref="images/crash_course_demo/frontend/view_with_image.png"/>
		</figure>
	</sect1>
	
	<sect1 id="crash_course_demo.fill_contents_and_imprint">
		<title>Inhalte der Seiten Inhalte und Impressum gestalten</title>
		
		<para>
			Neben der Startseite haben wir mit der Seite <emphasis>Inhalt</emphasis> und 
			<emphasis>Impressum</emphasis>noch zwei weitere Seiten (um die Seite <emphasis>Kontakt</emphasis>
			kümmern wir uns im nachfolgenden Kapitel <xref linkend="crash_course_demo.implement_contact_form"/>, 
			die wir mit Inhalten füllen wollen.
		</para>
		
		<para>
			Um die beiden Seiten mit Inhalten zu befüllen, klicken Sie auf das Symbol <guibutton>Edit</guibutton> in der
			Zeile des jeweiligen Seitentitels.
		</para>
		
		<note>
			<para>
				Auch ohne Inhalte können diese beiden Seiten jetzt schon in der Ausgabe schon aufgerufen werden, da sie,
				wie die Startseite, dasselbe <emphasis>Template Set</emphasis> nutzen (<emphasis>Standardaussehen</emphasis>).
			</para>
		</note>
	</sect1>
	
	<sect1 id="crash_course_demo.implement_contact_form">
		<title>Kontaktformular erstellen</title>
		
		<para>
			Zu guter Letzt bleibt noch die Erstellung des Kontaktformulars.
			Klicken Sie in der Seitenübersicht auf das Symbol zum Editieren
			des Formulars.
		</para>
		
		<figure id="crash_course_demo.pages_simpleform_edit">
			<title>Inhalte dem Kontakt-Formular hinzufügen</title>
			<graphic fileref="images/crash_course_demo/pages_simpleform_edit.png"/>
		</figure>
		
		<variablelist>
			<varlistentry>
				<term><guilabel>Title</guilabel></term>
				<listitem>
					<para>
						Die Überschrift der Seite. Die Vorbelegung mit
						dem Seitennamen <userinput>Kontakt</userinput> können
						Sie bestehen lassen.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Content</guilabel></term>
				<listitem>
					<para>
						Hier können Sie einen Beschreibungstext zum Formular
						einfügen und damit beispielsweise die Besucher
						darüber informieren, wie lange sie auf eine Antwort
						warten müssen.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Text converter</guilabel></term>
				<listitem>
					<para>
						Wenn Sie wie bei der Startseite Text-Formatierungen
						verwenden wollen, wählen Sie hier die Option
						Textile aus dem Menü aus.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Apply text macros</guilabel></term>
				<listitem>
					<para>
						Setzen Sie hier einen Haken, damit eventuell vorhandene
						Links im Feld <guilabel>Content</guilabel> erzeugt werden.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Form type</guilabel></term>
				<listitem>
					<para>
						Der Form Type bestimmt, aus welchen Feldern das Formular
						aufgebaut ist. Das <guimenuitem>Personal
						form</guimenuitem> besteht aus den Feldern Name,
						E-Mail-Adresse, Homepage und Nachricht. Das 
						<guimenuitem>Business form</guimenuitem> enthält die
						Felder Vorname, Nachname, Adresse, Ort, Telefonnummer,
						E-Mail-Adresse, Nachricht und eine Checkbox, bei der
						der Besucher auswählen kann, ob er zurückgerufen
						werden will oder nicht. Wählen Sie den Eintrag
						<guimenuitem>Personal form</guimenuitem> aus.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>From: address</guilabel></term>
				<listitem>
					<para>
						Die Adresse, mit der die vom Formular erzeugte
						E-Mail versendet werden soll.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>To: address</guilabel></term>
				<listitem>
					<para>
						Die E-Mail-Adresse, an die die vom Formular erzeugte
						E-Mail versendet werden soll.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Subject</guilabel></term>
				<listitem>
					<para>
						Betreff, der in die Nachricht eingefügt werden soll,
						die vom Formular versendet wird.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Use captcha</guilabel></term>
				<listitem>
					<para>
						Definiert, ob ein Bild in das Formular eingebettet
						werden soll, in dem Text enthalten ist, der vom
						Besucher abgetippt werden soll. Schützt gegen
						Formular-Spam. Belassen Sie hier die Voreinstellung
						<guimenuitem>Disable captcha</guimenuitem>.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			Klicken Sie nun auf <guibutton>Update form</guibutton>, um Ihre
			Eingaben zu speichern.
		</para>
		
		<para>
			 Wechseln Sie nun zum Menu
			<guimenu>Templating</guimenu> und dort zum Untermenu
			<guisubmenu>Templates</guisubmenu> &ndash; Denn es muss noch eine
			Vorlage für das Formular angelegt werden.
		</para>
		
		<para>
			Suchen Sie nach der Vorlage, die Sie für die Inhaltsseiten
			verwendet haben. Klicken Sie beim Eintrag auf das Symbol
			<guibutton>Duplicate</guibutton>. Damit kann die bestehende
			Vorlage weiterverwendet und (mit leichten Änderungen) unter
			einem anderen Namen abgespeichert werden.
		</para>
		
		<figure id="crash_course_demo.templates_form_duplicate">
			<title>Duplizierte Vorlage anpassen</title>
			<graphic fileref="images/crash_course_demo/templates_form_duplicate.png"/>
		</figure>
		
		<variablelist>
			<varlistentry>
				<term><guilabel>Type</guilabel></term>
				<listitem>
					<para>
						Ändern Sie den Vorlagen-Typ von 
						<guimenuitem>simple_page_index</guimenuitem> auf
						<guimenuitem>simple_form_index</guimenuitem>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Name</guilabel></term>
				<listitem>
					<para>
						Ändern Sie den Vorlagennamen auf <userinput>Vorlage
						Kontaktformular</userinput>.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			Lassen Sie anderen Felder vorerst unangetastet und klicken
			Sie auf die Schaltfläche <guibutton>Duplicate template</guibutton>.
			Wenn Sie jetzt die Ausgabeseite für das Kontaktformular aufrufen,
			sehen Sie, dass der Inhaltsbereich noch leer ist. Aber das
			wird sich gleich ändern.
		</para>
		
		<para>
			Klicken Sie in der Vorlagenübersicht in der Zeile der <emphasis>Vorlage
			Kontaktformular</emphasis> auf das Symbol zum Bearbeiten der Vorlage und
			ersetzen Sie den Bereich von <markup><![CDATA[<div id="content">]]></markup> bis
			<markup><![CDATA[<!-- content --></div>]]></markup>
			durch folgenden Code:
		</para>
		
		<programlisting language="smarty"><![CDATA[
<div id="content">
	<h1>{$simple_form.title}</h1>
	
	{$simple_form.content}
	
	{if !empty($form.errors)}
	<ul>
	{foreach from=$form.errors item="error"}
		<li>{$error}</li>
	{/foreach}
	</ul>
	{/if}
	
	<form {$form.attributes}>
	{$form.javascript}
	<fieldset>
	{$form.hidden}
	
	<label for="name">{$form.name.label}<br />{$form.name.html}</label><br />
	<label for="email">{$form.email.label}<br />{$form.email.html}</label><br />
	<label for="homepage">{$form.homepage.label}<br />{$form.homepage.html}</label><br />
	<label for="message">{$form.message.label}<br />{$form.message.html}</label><br />
	
	{$form.submit.html}
	</form>
<!-- content --></div>
]]></programlisting>
		
		<para>
			Speichern Sie nun wieder die Vorlage und aktualisieren Sie die
			Ausgabeseite. Sie erhalten dann das Formular angezeigt.
		</para>

		<figure id="crash_course_demo.frontend.view_form_raw">
			<title>Ausgabe: Kontaktformular Elemente</title>
			<graphic fileref="images/crash_course_demo/frontend/view_form_raw.png"/>
		</figure>
				
		<para>
			Allerdings
			ist es noch nicht ganz einsatzbereit, denn die Vorlagen für die
			E-Mails, die versendet werden sollen, werden auch noch benötigt.
			Verlassen Sie die Eingabemaske für die Formularvorlage und gehen
			Sie zur Vorlagenübersicht zurück. Klicken Sie dort auf den Link
			<guibutton>Add new</guibutton>, um eine neu Vorlage anzulegen.
		</para>

		<figure id="crash_course_demo.templates_form_email">
			<title>Vorlage der Email Ansicht</title>
			<graphic fileref="images/crash_course_demo/templates_form_email.png"/>
		</figure>
				
		<variablelist>
			<varlistentry>
				<term><guilabel>Type</guilabel></term>
				<listitem>
					<para>
						Wählen Sie
						<guimenuitem>simple_form_personal_form_mail</guimenuitem>
						als Vorlagen-Typ aus.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Name</guilabel></term>
				<listitem>
					<para>Geben Sie einen Vorlagennamen wie <userinput>Vorlage
					E-Mail Kontaktformular</userinput> ein.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><guilabel>Sets</guilabel></term>
				<listitem>
					<para>
						Wählen Sie das aktuelle Vorlagen-Set
						<guimenuitem>Standardaussehen</guimenuitem> aus.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			In das Feld <guilabel>Content</guilabel> fügen Sie folgenden Code ein:
		</para>
		
		<programlisting language="smarty"><![CDATA[
E-Mail von {$form_data.now|date_format:"%d.%m.%Y, %H:%M:%S"}:

Name: {$form_data.name}
E-Mail: {$form_data.email}
Homepage: {$form_data.homepage}

{$form_data.message|wordwrap:65}
]]></programlisting>
		
		<para>
			Klicken Sie auf die Schaltfläche <guibutton>Add template</guibutton>,
			um die Vorlage zu speichern. Jetzt können Sie das Formular auf
			der Ausgabeseite ausfüllen und absenden. Wenn Sie alles richtig
			eingegeben haben, sollten Sie in den nächsten Minuten ein
			E-Mail mit Ihren Formulareingaben in der Inbox haben.
		</para>
		
		<figure id="crash_course_demo.implement_contact_form.generated_form_mail">
			<title>Vom Kontaktformular erzeugte E-Mail</title>
			<graphic fileref="images/crash_course_demo.implement_contact_form.generated_form_mail.png"/>
		</figure>
	</sect1>
</chapter>