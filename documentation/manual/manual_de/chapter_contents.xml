<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="contents">
	<title>Inhalte</title>
	
	<sect1 id="contents.how_it_works">
		<title>Arbeitsweise von Welcompose</title>
		
		<para>
			Im Gegensatz zu Programmen wie Dreamweaver
			bearbeitet man mit Welcompose keine kompletten Seiten,
			sondern Strukturelemente. Welcompose unterstützt etliche
			Strukturelemente. Zu diesen gehören beispielsweise
			Navigationen, Boxen oder auch Grundgerüste für verschiedene
			Inhaltstypen wie Formulare oder Blogs. Erst diese
			Strukturelemente ergeben zusammengesetzt und kombiniert mit
			einer Vorlage die fertige Seite. Einen schematische
			Visualisierung dieses Ablaufs zeigt die Grafik <xref
			linkend="contents.how_it_works.site_building"/>.
		</para>
		
		<figure id="contents.how_it_works.site_building">
			<title>Zusammensetzung einer Seite</title>
			<graphic fileref="images/contents/how_it_works/site_building.png"/>
		</figure>
		
		<para>
			Strukturelemente sind fast beliebig kombinierbar. Dies heisst, dass
			bei der Gestaltung (abgesehen von der Funktionalität der einzelnen
			Strukturelemente) einer Seite kaum Grenzen gesetzt sind. Ausnahmen
			sind beispielsweise die Grundgerüste für verschiedene Inhaltstypen,
			von denen pro Ausgabeseite nur eines vorkommen kann. Eine weitere
			Einschränkung ist, dass Strukturelemente voneinander abhängen
			können. So ist es beispielsweise nicht möglich, ein Blog Posting
			ohne Blog zu haben. Eine schematische Darstellung der Abhängigkeiten
			zwischen den einzelnen Strukturelementen zeigt Grafik <xref
			linkend="contents.how_it_works.dependencies_structural_elements"/>.
		</para>
		
		<figure id="contents.how_it_works.dependencies_structural_elements">
			<title>Abhängigkeiten zwischen Strukturelementen</title>
			<graphic fileref="images/contents/how_it_works/dependencies_structural_elements.png"/>
		</figure>
	</sect1>
	
	<sect1 id="contents.pages">
		<title>Seiten</title>
		
		<sect2 id="contents.pages.introduction">
			<title>Einführung</title>
			
			<para>
				Seiten stellen im Fall der Strukturelemente nur Grundgerüste
				für die effektive Webseite dar. Sie bestehen genauer gesagt
				aus einer Reihe von Elementen, die typischerweise auf der
				jeweiligen Seitenart vorkommen und beliebig auf einer Seite
				positioniert werden können. So besteht eine Formularseite
				aus einem Formular und eine Blog-Seite aus etlichen
				Blog Postings.
			</para>
			
			<para>
				Gleichzeitig stellen Seiten die Menüpunkte innerhalb einer
				Navigation dar. Das heisst, dass jede Seite einem Menüpunkt
				entspricht und man ohne Seite keinen Menüpunkt erhält. 
			</para>
			
			<para>
				Da Welcompose bereits etliche Seitentypen (siehe
				<xref linkend="templating.template_types.usage.which_template_type_for_which_view.list_of_template_types"/>
				unterstützt (und es wohl noch einige mehr werden dürften), werden die
				Eigenschaften und die Verwendung der verschiedenen
				Seitentypen zukünftig in separaten Kapiteln erklärt.
			</para>
		</sect2>
		
		<sect2 id="contents.pages.manage">
			<title>Verwaltung</title>
			
			<sect3 id="contents.pages.manage.overview">
			<title>Seiten-Übersicht</title>
			
				<para>
					Die Verwaltung der Seiten erfolgt über den Menüpunkt
					<guisubmenu>Seiten</guisubmenu> im Bereich
					<guimenu>Inhalte</guimenu>. Die Seiten sind nach
					den jeweiligen Navigationen, zu denen sie gehören,
					zusammengefasst und in der Reihenfolge und Einrückung
					dargestellt, wie sie später ausgegeben werden. 
				</para>
				
				<para>
					Nachdem eine Navigation angelegt wurde, erhält man auf der
					Seiten-Übersichtsseite einen Eintrag für die Navigation
					samt einer leeren zugehörigen Seitenstruktur. Die 
					Seitenstruktur teilt sich bei einer vorhandenen Navigation
					in fünf, bei mehreren vorhandenen Navigationen in sechs
					Spalten auf.
				</para>
				
				<figure id="contents.pages.manage.page_manager">
					<title>Seiten-Übersicht</title>
					<graphic fileref="images/contents/pages/manage.page_manager.png"/>
				</figure>
				
				<variablelist>
					<title>Funktionselemente Seitenübersicht</title>
					<varlistentry>
						<term><guilabel>Seitenstruktur</guilabel></term>
						<listitem>
							<para>
								Enthält den Namen der einzelnen Seite,
								wie er in der Navigation als Menüpunkt
								erscheint. Der Namen wird zudem mit der
								richtigen Einrückung gezeigt, wobei jede
								Verschachtelungsebene durch einen grauen
								Punkt vor dem Namen gezeigt wird. Eine Seite
								über alle Navigationen hinweg kann mit einem
								kleinen orangen I (i) markiert sein. Dies
								signalisiert, dass es sich bei der Seite um die
								sogenannte Index-Seite handelt, die beim Aufruf
								des Welcompose-Ausgabebereits ohne irgendwelche
								Parameter angezeigt wird. Geschützte Seiten sind
								mit einem orangen Schloss-symbol versehen.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Position</guilabel></term>
						<listitem>
							<para>
								Die Spalte <guilabel>Position</guilabel>
								hält zwei Schaltflächen bereit, mit denen die
								Menüpunkte im Rahmen der Navigation nach
								oben respektive nach unten bewegt werden können.
								Gleichzeitig wird darüber die Einrückung
								beeinflusst. Das Prinzip hinter der Bewegung
								beleuchtet grob <xref
								linkend="contents.pages.manage.page_moving_results"/>.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Neu</guilabel></term>
						<listitem>
							<para>
								Fügt eine neue Seite zur aktuellen Navigation
								relativ zum aktuellen Menüpunkt ein. Der Menüpunkt
								wird entweder über oder unter dem aktuellen
								Menüpunkt eingesetzt.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Bearbeiten</guilabel></term>
						<listitem>
							<para>
								Über die Schaltfläche
								<guibutton>Bearbeiten</guibutton> gelangen Sie zu
								den Formularen, um die Metadaten der jeweiligen
								Seiten (beispielsweise den Namen der Seite)
								sowie deren Inhalte zu bearbeiten. 
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Verschieben</guilabel></term>
						<listitem>
							<para>
								Die Schaltfläche <guibutton>Verschieben</guibutton>,
								die nur vorhanden ist, wenn mehr als eine
								Navigation existiert, erlaubt es, eine Seite
								respektive einen Menüpunkt an eine andere
								Navigation anzuhängen.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Löschen</guilabel></term>
						<listitem>
							<para>
								Löscht die Seite und alle ihre Inhalte (nach einer Sicherheitsabfrage).
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				
				<figure id="contents.pages.manage.page_moving_results">
					<title>Seiten verschieben</title>
					<graphic fileref="images/contents/pages/manage.page_moving_results.png"/>
				</figure>
				
				<para>
					Beim Hinzufügen einer Seite werden eine Reihe von
					Informationen abgefragt, mit denen die Anzeige sowie die
					Inhalte der Seite beeinflusst werden können. Im Rahmen
					von Welcompose werden diese Informationen als
					Metadaten bezeichnet.
				</para>
				
				<figure id="contents.pages.manage.add_page">
					<title>Seite hinzufügen</title>
					<graphic fileref="images/contents/pages/manage.add_page.png"/>
				</figure>
				
				<variablelist>
					<varlistentry>
						<term><guilabel>Position</guilabel></term>
						<listitem>
							<para>
								Bestimmt, wie die neue Seite in die Navigation
								eingefügt werden soll und zwar relativ
								gesehen zum Menüpunkt, neben dem auf die
								Schaltfläche <guibutton>Neu</guibutton>
								geklickt wurde. Eine Seite kann entweder
								oberhalb oder unterhalb des Menüpunkts
								eingefügt werden.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Name</guilabel></term>
						<listitem>
							<para>
								Name der Seite respektive des Menüpunkts.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>URL-Name</guilabel></term>
						<listitem>
							<para>
								Name der Seite in einer vereinfachten Form
								für den Einsatz in suchmaschinenfreundlichen
								URLs (nur a-z, 0-9 und - als erlaubte Zeichen).
								Wird automatisch mit Hilfe von JavaScript
								bei der Eingabe des Seitennamen erzeugt
								und kann bei Bedarf manuell angepasst werden.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Typ</guilabel></term>
						<listitem>
							<para>
								Bestimmt den Seitentyp der Seite, respektive
								mit welchen Inhalten die Seite befüllt werden
								kann. Diese Einstellung kann später nicht mehr
								geändert werden.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Vorlagengruppe</guilabel></term>
						<listitem>
							<para>
								Die Vorlagegruppe, der der neue Seite zugeorndet
								werden soll.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Index-Seite</guilabel></term>
						<listitem>
							<para>
								Markiert die Seite als Index-Seite, die beim Aufruf des 
								Ausgabe-Bereichs von Welcompose ohne weitere Parameter verwendet
								wird ("Startseite").
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Geschützt</guilabel></term>
						<listitem>
							<para>
								Erlaubt den Zugriff auf die entsprechende
								Seite nur nach Eingabe von Benutzernamen
								und Passwort. Welche Anwender sich anmelden
								dürfen, wird über das Feld
								<guilabel>Benutzergruppen</guilabel> gesteuert.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Entwurf</guilabel></term>
						<listitem>
							<para>
								Speichert die Seite im Entwurf-Modus. So lange
								diese Einstellung aktiv ist, wird die Seite 
								nicht veröffentlicht. Gleichzeitig wird die
								Seite nicht in der Ausgabe der Navigation
								berücksichtigt. Die Listung der Seiten im Adminstrationsbereich
								ist gewährleistet. Seiten mit Entwurfsstatus sind farblich
								abgesetzt.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>No Follow</guilabel></term>
						<listitem>
							<para>
								Das setzen dieser Option gibt an, ob Verweise auf diese Seite
								mit dem Attribute/Wertepaar <code>rel="nofollow"</code> erweitert
								werden können und ermöglicht eine Abfrage dieses Wertes bspw.
								in der Navigationserstellung (s. <xref linkend="contents.navigations"/>).
								Das Attribut verhindert die Google Page Rank Vererbung.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><guilabel>Benutzergruppen</guilabel></term>
						<listitem>
							<para>
								Benutzergruppen, denen der Zugriff auf die
								Seite gestattet wird, sollte sie geschützt
								sein.
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				
				<para>
					Parallel zu den "normalen" Metadaten-Feldern bietet
					Welcompose einige ergänzende Felder, die beispielsweise
					zur Befüllung mit Inhalt genutzt werden können. So erlaubt
					das Feld <guilabel>Alternativer Name</guilabel> die Speicherung
					eines alternativen Seitennamen sowie
					<guilabel>Beschreibung</guilabel> und
					<guilabel>Optionaler Text</guilabel> das Hinterlegen von
					beliebigem Fliesstext, der beispielsweise für die Befüllung
					von Metatags im Seitenkopf verwendet werden kann. Die
					Verwendung der Felder <guilabel>Sitemap Änderungshäufigkeit</guilabel>
					und <guilabel>Sitemap Priorität</guilabel> wird in
					<xref linkend="settings.google_sitemaps"/> erklärt.
				</para>
			</sect3>
		</sect2>
		
		<sect2 id="contents.pages.output">
			<title>Ausgabe</title>
			
			<example id="contents.pages.output.get_current_page">
				<title>Aktuelle Seite auslesen</title>
				
				<para>
					Das explizite Auslesen der jeweils aktuellen Seite in einer Seitenvorlage
					ist in der Regel nicht nötig, da Welcompose dies automatisch
					übernimmt und die Metadaten der aktuellen Seite über die
					Smarty-Variable <code>{$page}</code> zur Verfügung stellt:
				</para>
				
				<programlisting language="smarty"><![CDATA[
Seiten-ID: {$page.id}
Seiten-Name: {$page.name}
Beschreibung: {$page.description}
]]></programlisting>
			</example>
			
			<note>
				<para>
					Auch hier gilt: mit der Smarty-Debug Konsole 
					(Seitenvorlagen: <xref linkend="templating.templates.usage.display_assigned_data"/>)
					finden sie heraus, welche Variablen ihnen in der aktuellen Seitenvorlage zur 
					Verfügung stehen.
				</para>
			</note>
			
			<example id="contents.pages.output.get_page">
				<title>Seite auslesen</title>
				
				<para>
					Wollen Sie irgendwann einmal eine bestimmte Seite auslesen,
					die nicht der aktuellen Seite entspricht, geht dies
					natürlich auch. Achten Sie dabei darauf, nicht die
					Variable mit den Metadaten der aktuellen Seite zu
					überschreiben. Oder einfach gesagt: Wählen Sie nicht den
					Variablennamen <code>$page</code>.
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Seite mit der ID 1 auslesen *}
{select_simple ns="Content" class="Page" method="selectPage"
	var="some_page" id="1"}

Seiten-ID: {$some_page.id}
Seiten-Name: {$some_page.name}
]]></programlisting>
			</example>
			
			<note>
				<para>
					Die im vorherigen Beispiel genutzte Wertangabe des Parameters 
					<filename>var</filename> (hier: <userinput>some_page</userinput>) ist frei wählbar.
				</para>
			</note>
			
			<example id="contents.pages.output.get_pages">
				<title>Mehrere Seiten auslesen</title>
				
				<para>
					Eine Aufgabe, die wohl bei ziemlich jeder Webseite
					anfallen wird, ist das Auslesen mehrerer Seiten.
					Beispielsweise, wenn es darum geht, die Menüpunkte
					einer Navigation auszulesen. 
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Seiten zugehörig zu Navigation 1 auslesen *}
{select_named ns="Content" class="Page" method="selectPages"
	var="pages" navigation="1"}

{foreach from=$pages item="_page"}
	Seiten-ID: {$_page.id}
	Seiten-Name: {$_page.name}
{/foreach}
]]></programlisting>

				<para>
					Alternativ können hier die abhängigen Menüpunkte auch über den
					Namen der Navigation (Parameter <emphasis>navigation_name</emphasis>)
					ausgelesen werden.
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Seiten zugehörig zu Navigation mit Namen "Hauptnavigation" auslesen *}
{select_named ns="Content" class="Page" method="selectPages"
	var="pages" navigation_name="Hauptnavigation"}

{foreach from=$pages item="_page"}
	Seiten-ID: {$_page.id}
	Seiten-Name: {$_page.name}
{/foreach}
]]></programlisting>
			</example>
			
			<note>
				<para>
					Die in den beiden vorherigen Beispielen genutzte Wertangabe des Parameters
					<filename>var</filename> (hier: <userinput>pages</userinput>) ist frei wählbar.
				</para>
			</note>
		</sect2>
	</sect1>


	<sect1 id="contents.global_boxes">
		<title>Globale Boxen</title>
		
		<sect2 id="contents.global_boxes.introduction">
			<title>Einführung</title>
			
			<para>
				Mit Hilfe von Globalen Boxen kann auf jeder Seite an beliebiger
				Stelle beliebiger Inhalt eingefügt werden, der über das
				Admininterface administrierbar ist. Im Gegensatz zu den
				seitenbezogenen Boxen, die auf jeder Seite, auf der sie angezeigt
				werden, unterschiedliche Inhalte darstellen können, ist der
				Inhalt einer Globalen Box überall identisch.
			</para>
			
			<para>
				Die Globalen Boxen eignen sich beispielsweise zur Anzeige
				von speziellen Hinweisen oder von Kontaktinformationen u.v.m. 
			</para>
		</sect2>
		
		<sect2 id="contents.global_boxes.manage">
			<title>Verwaltung</title>
			
			<para>
				Die Verwaltung der Globalen Boxen erfolgt über eine Reihe von
				Formularen im Bereich <guimenu>Inhalte</guimenu> unter
				dem Menüpunkt <guisubmenu>Globale Boxen</guisubmenu>.
			</para>
			
			<figure id="contents.global_boxes.manage.global_boxes_overview">
				<title>Übersicht über vorhandene Globale Boxen</title>
				<graphic fileref="images/contents/global_boxes/manage.global_boxes_overview.png"/>
			</figure>
			
			<para>
				Die Übersicht zeigt die vorhandenen Globalen Boxen in
				alphabetischer Reihenfolge und bietet Links zum Hinzufügen,
				Bearbeiten und Löschen von Globalen Boxen.
			</para>
			
			<figure id="contents.global_boxes.manage.add_global_box">
				<title>Global Box hinzufügen</title>
				<graphic fileref="images/contents/global_boxes/manage.add_global_box.png"/>
			</figure>
			
			<para>
				Das Formular zum Hinzufügen respektive Editieren der Globalen
				Boxen besteht nur aus einigen wenigen Feldern:
			</para>
			
			<variablelist>
				<varlistentry>
					<term><guilabel>Name</guilabel></term>
					<listitem>
						<para>
							Der Name der Globalen Box. Kommt ausser im 
							Administrationsbereich nicht zum Einsatz. Muss
							innerhalb eines Projekts einzigartig sein.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Inhalt</guilabel></term>
					<listitem>
						<para>
							Inhalt der Global Box. 
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Textkonverter</guilabel></term>
					<listitem>
						<para>
							Textkonverter, der auf den Inhalt der Globalen
							Box appliziert werden soll (siehe <xref
							linkend="settings.text_converters"/>).
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Makros anwenden</guilabel></term>
					<listitem>
						<para>
							Entscheidet, ob die vorhandenen Textmakros auf den Inhalt der
							Globalen Box appliziert werden sollen (siehe <xref
							linkend="settings.text_macros"/>).
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			
			<para>
				Gleichzeitig bieten die Globalen Boxen Unterstützung durch den Mediamanager
				(siehe <xref linkend="media.mediamanager"/>).
			</para>
		</sect2>
		
		<sect2 id="contents.global_boxes.output">
			<title>Ausgabe</title>
			
			<para>
				Globale Boxen können über einen in allen Seitenvorlagen vorhandenen
				Link ausgewählt und automatisch in eine Seitenvorlage eingesetzt werden.
				Klicken Sie dazu auf den entsprechenden Link über dem Textbereich zum Editieren der
				Vorlage (siehe <xref
				linkend="contents.global_boxes.output.reference_global_box"/>). Hierbei wird
				der Code automatisch eingesetzt und es muss nur noch die ID angepasst werden.
			</para>
			
			<figure id="contents.global_boxes.output.reference_global_box">
				<title>Globale Box referenzieren</title>
				<graphic fileref="images/contents/global_boxes/output.reference_global_box.png"/>
			</figure>
			
			<example id="contents.global_boxes.output.get_global_box">
				<title>Globale Box ausgeben</title>
				
				<para>
					Um eine einzelne Globale Box auszulesen, wird die ID
					(im Beispiel <userinput>1</userinput>) der jeweiligen
					Globalen Box benötigt. Der Code zum Auslesen der Box
					kann auch über ein Pop-up (s.o) generiert und eingesetzt werden. 
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Global Box mit der ID 1 auslesen*}
{select_simple ns="Content" class="GlobalBox" method="selectGlobalBox"
	var="global_box" id="1"}

ID der Global Box: {$global_box.id}
Name der Global Box: {$global_box.name}
Inhalt der Global Box: {$global_box.content}
]]></programlisting>
			</example>
			
			<note>
				<para>
					Die im vorherigen Beispiel genutzte Wertangabe des Parameters 
					<filename>var</filename> (hier: <userinput>global_box</userinput>) ist frei wählbar.
				</para>
			</note>
			
			<example id="contents.global_boxes.output.get_global_boxes">
				<title>Globale Boxen ausgeben</title>
				
				<para>
					Sollen mehrere Globale Boxen ausgegeben werden, empfiehlt
					es sich in der Regel, mehrmals einfach nur eine Box in der
					gewünschten Reihenfolge auszugeben. Es ist aber auch
					möglich, alle aufs Mal auszulesen (steht <emphasis>nicht</emphasis>
					als automatisch einsetzbarer String zur Verfügung).
				</para>
				
				<programlisting language="smarty"><![CDATA[
{select_named ns="Content" class="GlobalBox" method="selectGlobalBoxes"
	var="global_boxes"}

{foreach from=$global_boxes item="_global_box"}
	ID der Global Box: {$_global_box.id}
	Name der Global Box: {$_global_box.name}
	Inhalt der Global Box: {$_global_box.content}
{/foreach}
]]></programlisting>
			</example>
			
			<note>
				<para>
					Die im vorherigen Beispiel genutzte Wertangabe des Parameters
					<filename>var</filename> (hier: <userinput>global_boxes</userinput>) ist frei wählbar.
				</para>
			</note>
		</sect2>
	</sect1>


	<sect1 id="contents.boxes">
		<title>Boxen</title>
		
		<sect2 id="contents.boxes.introduction">
			<title>Einführung</title>
			
			<para>
				Seitenbezogene <emphasis>Boxen</emphasis> können für jede inhaltliche Seite 
				separat angelegt werden. Sie erlauben es somit, im Gegensatz zu Globalen Boxen
				(siehe <xref linkend="contents.global_boxes"/>), auf inhaltlichen Seiten 
				jeweils unterschiedliche Inhalte anzuzeigen. 
			</para>
			
			<para>
				Seitenbezogene Boxen eignen sich beispielsweise für Seitenspalten, deren
				Struktur und Aussehen gleich, die Inhalte aber abhängig von der aufgerufenen
				Seite unterschiedlich sein sollen.  
			</para>
		</sect2>
		
		<sect2 id="contents.boxes.manage">
			<title>Verwaltung</title>
			
			<para>
				Da Boxen seitenindividuell sind, erfolgt deren Verwaltung im Submenü der
				Seitenverwaltung unter dem Menüpunkt <guibutton>Boxen</guibutton>.
			</para>
			
			<figure id="contents.boxes.manage.boxes_overview">
				<title>Übersicht über vorhandene Boxen</title>
				<graphic fileref="images/contents/boxes/manage.boxes_overview.png"/>
			</figure>
			
			<para>
				Die Übersicht zeigt die vorhandenen Boxen in
				alphabetischer Reihenfolge und bietet Links zum Hinzufügen,
				Bearbeiten und Löschen von Boxen.
			</para>
			
			<para>
				Über <emphasis role="strong">Bestehende Boxen übernehmen</emphasis> haben sie
				die komfortable Möglichkeit Boxen, die anderen Seiten zugeordnet sind,
				der aktuellen Seite hinzuzufügen (asynchron, ohne Neu-Laden der Seite).
				Dieses erspart viele Klicks und ausufernde
				Copy &amp; Paste Orgien.
			</para>
			
			<figure id="contents.boxes.manage.boxes_foreign_boxes_overview">
				<title>Offene Ansicht der Option: Bestehende Boxen übernehmen</title>
				<graphic fileref="images/contents/boxes/manage.boxes_foreign_boxes_overview.png"/>
			</figure>
			
			<variablelist>
				<title>Funktionsspalten: Bestehende Boxen übernehmen</title>
				<varlistentry>
					<term><guilabel>Name</guilabel></term>
					<listitem>
						<para>
							Name/Titel der Box.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Seite</guilabel></term>
					<listitem>
						<para>
							Name der Seite, der die Box zugeordnet ist, respektive
							für die sie angelegt wurde.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Inhalt(Quellansicht)</guilabel></term>
					<listitem>
						<para>
							Begrenzte Anzeige des Inhaltes der Box.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Anzeigen</guilabel></term>
					<listitem>
						<para>
							Durch einen Klick auf die Schaltfläche <guibutton>Anzeige</guibutton>
							wird ihnen innerhalb der Seite der vollständige Inhalt der Box angezeigt. 
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Box übernehmen</guilabel></term>
					<listitem>
						<para>
							Die Schaltfläche <guibutton>Box übernehmen</guibutton> veranlasst,
							das die ausgewählte Box der aktuellen Seite hinzugefügt wird.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			
			<figure id="contents.boxes.manage.add_box">
				<title>Neue Box anlegen</title>
				<graphic fileref="images/contents/boxes/manage.add_box.png"/>
			</figure>
			
			<para>
				Das Formular zum Hinzufügen respektive Editieren der 
				Boxen besteht nur aus einigen wenigen Feldern:
			</para>
			
			<variablelist>
				<varlistentry>
					<term><guilabel>Name</guilabel></term>
					<listitem>
						<para>
							Der Name der Box. Kommt ausser im 
							Administrationsbereich nicht zum Einsatz. Muss
							innerhalb eines Projekts einzigartig sein.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Inhalt</guilabel></term>
					<listitem>
						<para>
							Inhalt der Box. 
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Textkonverter</guilabel></term>
					<listitem>
						<para>
							Textkonverter, der auf den Inhalt der 
							Box appliziert werden soll (siehe <xref
							linkend="settings.text_converters"/>).
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Makros anwenden</guilabel></term>
					<listitem>
						<para>
							Entscheidet, ob die vorhandenen Textmakros auf den Inhalt der
							Box appliziert werden sollen (siehe <xref
							linkend="settings.text_macros"/>).
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			
			<para>
				Gleichzeitig bieten die seitenabhängigen Boxen Unterstützung durch den Mediamanager
				(siehe <xref linkend="media.mediamanager"/>).
			</para>
		</sect2>
		
		<sect2 id="contents.boxes.output">
			<title>Ausgabe</title>
			
			<para>
				Auch seitenabhängige Boxen können über einen in allen Seitenvorlagen vorhandenen
				Link ausgewählt und automatisch in eine Seitenvorlage eingesetzt werden.
				Klicken Sie dazu auf den entsprechenden Link über dem Textbereich zum Editieren der
				Vorlage (siehe <xref linkend="contents.boxes.output.reference_box"/>). Hierbei wird
				der Code automatisch eingesetzt und es muss nur noch die ID angepasst werden.
			</para>
			
			<figure id="contents.boxes.output.reference_box">
				<title>Box referenzieren</title>
				<graphic fileref="images/contents/boxes/output.reference_box.png"/>
			</figure>
			
			<example id="contents.boxes.output.get_box_by_name">
				<title>Box anhand des Namens ausgeben</title>
				
				<para>
					Um eine einzelne Box auszulesen, wird der Name
					(im Beispiel <userinput>headerbild</userinput>) der jeweiligen
					Box benötigt. Der Code zum Auslesen der Box
					kann auch über ein Pop-up (s.o.) generiert und eingesetzt werden. 
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Box mit dem Namen headerbild auslesen*}
{select_simple ns="Content" class="Box" method="selectBoxUsingName"
	var="box" page=$page.id name="headerbild"}

ID der Box: {$box.id}
Name der Box: {$box.name}
Inhalt der Box: {$box.content}
]]></programlisting>
			</example>
			
			<note>
				<para>
					Die im vorherigen Beispiel genutzte Wertangabe des Parameters 
					<filename>var</filename> (hier: <userinput>box</userinput>) ist frei wählbar.
				</para>
			</note>
			
			<example id="contents.boxes.output.get_box_by_id">
				<title>Box anhand der ID ausgeben</title>
				
				<para>
					Alternativ (steht <emphasis>nicht</emphasis> als automatisch einsetzbarer String
					zur Verfügung) können Sie eine Box auch anhand der ID (im Beispiel <userinput>1</userinput>)
					auslesen. 
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Box mit der ID 1 auslesen*}
{select_simple ns="Content" class="Box" method="selectBox"
	var="box" id="1"}

ID der Box: {$box.id}
Name der Box: {$box.name}
Inhalt der Box: {$box.content}
]]></programlisting>
			</example>
			
			<note>
				<para>
					Die im vorherigen Beispiel genutzte Wertangabe des Parameters 
					<filename>var</filename> (hier: <userinput>box</userinput>) ist frei wählbar.
				</para>
			</note>
			
			<example id="contents.boxes.output.get_boxes">
				<title>Boxen ausgeben</title>
				
				<para>
					Sollen mehrere Boxen ausgegeben werden, empfiehlt
					es sich in der Regel, mehrmals einfach nur eine Box in der
					gewünschten Reihenfolge auszugeben. Es ist aber auch
					möglich, alle aufs Mal auszulesen.
				</para>
				
				<programlisting language="smarty"><![CDATA[
{select_named ns="Content" class="Box" method="selectBoxes"
	var="boxes"}

{foreach from=$boxes item="_box"}
	ID der Box: {$_box.id}
	Name der Box: {$_box.name}
	Inhalt der Box: {$_box.content}
{/foreach}
]]></programlisting>
			</example>
			
			<note>
				<para>
					Die im vorherigen Beispiel genutzte Wertangabe des Parameters 
					<filename>var</filename> (hier: <userinput>boxes</userinput>) ist frei wählbar.
				</para>
			</note>
			
		</sect2>
	</sect1>

	
	<sect1 id="contents.navigations">
		<title>Navigationen</title>
		
		<sect2 id="contents.navigations.introduction">
			<title>Einführung</title>
			
			<para>
				Navigationen dienen dazu, Seiten zu Gruppen von Menüpunkten
				für den Aufbau von Navigationen zusammenzufassen. Damit lassen
				sich auf einfache Weise in den Ausgabevorlagen
				Navigationsstrukturen (beispielsweise HTML-Listen) automatisch
				erzeugen, ohne dass man wissen muss, welcher Menüpunkt genau
				wohin kommt. Die Steuerung von Zugehörigkeit einer Seite
				(und damit eines Menüpunkts) zu einer bestimmten Navigation
				sowie die genaue Platzierung des Menüpunkts innerhalb einer
				Navigation lässt sich komplett über die
				Administrationsoberfläche steuern.
			</para>
			
			<para>
				Für maximale Flexibilität beim Aufbau einer Webseite unterstützt
				Welcompose mehrere Navigationen sowie eine unbegrenzte Anzahl
				von Navigationspunkten pro Navigation.
			</para>
		</sect2>
		
		<sect2 id="contents.navigations.manage">
			<title>Verwaltung</title>
			
			<para>
				Die Verwaltung der Navigationen erfolgt über die
				Administrationsoberfläche unter dem Menüpunkt
				<guisubmenu>Navigationen</guisubmenu> im Bereich
				<guimenu>Inhalte</guimenu>. Dort können
				Navigationen hinzugefügt, bearbeitet und gelöscht werden.
			</para>
			
			<figure id="contents.navigations.manage.manage_navigations">
				<title>Navigationen verwalten</title>
				<graphic fileref="images/contents/navigations/manage.manage_navigations.png"/>
			</figure>
			
			<para>
				Eine Navigation besteht einzig und allein aus einem
				Navigationsnamen. Dieser hilft dabei, die Navigation
				zu identifizieren und Menüpunkte respektive Seiten der
				Navigation zuzuweisen. Wählen Sie deshalb einen möglichst
				beschreibenden und eindeutigen Namen für eine Navigation aus,
				beispielsweise <userinput>Hauptnavigation</userinput>
				oder <userinput>Fusszeile</userinput>. Da Navigationen über
				ihren Namen identifiziert werden, kann pro Projekt jeder
				Navigationsname nur einmal vorkommen.
			</para>
			
			<para>
				Die Navigationen werden auch bei der Verwaltung der Seiten
				angetroffen. Auf der Übersichtsseite sind die verschiedenen
				Navigationen mitsamt den ihnen zugeordneten Seiten
				alphabetisch gelistet (siehe <xref
				linkend="contents.pages.manage"/>).
			</para>
			
		</sect2>
		
		<sect2 id="contents.navigations.output">
			<title>Ausgabe</title>
						
			<note>
				<para>
					Wenn Sie die Menüpunkte einer Navigation ausgeben wollen,
					konsultieren Sie bitte den entsprechenden <xref
					linkend="contents.pages.output"/> im
					<xref linkend="contents.pages"/>.
				</para>
			</note>
			
			<example id="contents.navigations.output.get_navigation">
				<title>Navigation auslesen</title>
				
				<para>
					Um eine einzelne Navigation auszulesen, wird die ID
					(im Beispiel <userinput>1</userinput>) der jeweiligen
					Navigation benötigt. 
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Navigation mit der ID 1 auslesen*}
{select_simple ns="Content" class="Navigation" method="selectNavigation"
	var="navigation" id="1"}
	
{* Navigation mit ID und Namen ausgeben *}
ID der Navigation: {$navigation.id}
Name der Navigation: {$navigation.name}
]]></programlisting>
			</example>
			
			<note>
				<para>
					Die im vorherigen Beispiel genutzte Wertangabe des Parameters 
					<filename>var</filename> (hier: <userinput>navigation</userinput>) ist frei wählbar.
				</para>
			</note>
			
			<example id="contents.navigations.output.get_navigations">
				<title>Mehrere Navigationen auslesen</title>
				
				<para>
					Es werden alle dem aktuellen Projekt zugeordneten
					Navigationen ausgelesen und alphabetisch sortiert
					ausgegeben.
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Navigationen auslesen *}
{select_named ns="Content" class="Navigation" method="selectNavigations"
	var="navigations"}
	
{* Navigationen mit Namen und ID ausgeben *}
{foreach from=$navigations item="_navigation"}
	ID der Navigation: {$_navigation.id}
	Name des Navigation: {$_navigation.name}
{/foreach}
]]></programlisting>
			</example>
			
			<note>
				<para>
					Die im vorherigen Beispiel genutzte Wertangabe des Parameters 
					<filename>var</filename> (hier: <userinput>navigations</userinput>) ist frei wählbar.
				</para>
			</note>
			
			<tip>
				<para>
					Wie sie mehrstufige Navigationen erstellen, erläutern wir im Anwendungsbereich
					<xref linkend="usage.nested_navigation"/>.
				</para>
			</tip>
			
		</sect2>
	</sect1>
	
	
	<sect1 id="contents.structural_templates">
		<title>Strukturvorlagen</title>
		
		<sect2 id="contents.structural_templates.introduction">
			<title>Einführung</title>
				
			<para>
				Strukturvorlagen sind ein Hilfsmittel, das den Autoren
				die Einhaltung eines einheitlichen Aussehens respektive einer
				einheitlichen Seitenstruktur über die gesamte Webseite hinweg
				erleichtern soll. Sie eignen sich damit vor allem für
				umfangreiche Webprojekte mit einer grossen Anzahl Einzelseiten.
			</para>
			
			<para>
				Die Strukturvorlagen ermöglichen es, Gerüste für die
				Strukturierung von Inhaltsseiten oder Seitenfragmenten zu
				hinterlegen. Sollen beispielsweise Seiten zur Präsentation
				von einzelnen Produkten immer mit einem Titel der Klasse
				H1 beginnen, gefolgt von einer Einleitung, einer Liste
				von Kurzinformationen zum Produkt und einigen Bildern, können
				Platzhalter-Texte mit der richtigen Formatierung hinterlegt
				und bei der Bearbeitung einer Seite über ein Pop-up jederzeit
				eingefügt werden, sodass nur die Inhalte angepasst werden
				müssen.
			</para>
			
			<para>
				Eine weitere Möglichkeit ist die Einbindung von
				Standard-Inhalten oder die Vorbereitung komplexer Strukturen
				wie Tabellen.
			</para>
			
		</sect2>
		
		<sect2 id="contents.structural_templates.manage">
			<title>Verwaltung</title>
			
			<para>
				Die Verwaltung der Strukturvorlagen erfolgt im
				Administrationsbereich unter <guimenu>Inhalte</guimenu>
				im Unterpunkt <guisubmenu>Strukturvorlagen</guisubmenu>.
				Wenn Sie dort auf den Link <guibutton>Neu anlegen</guibutton>
				klicken, gelangen Sie zum Formular zum Anlegen einer neuen
				Strukturvorlage.
			</para>
			
			<figure id="contents.structural_templates.manage.add_structural_template">
				<title>Strukturvorlage anlegen</title>
				<graphic fileref="images/contents/structural_templates/manage.add_structural_template.png"/>
			</figure>
			
			<variablelist>
				<varlistentry>
					<term><guilabel>Name</guilabel></term>
					<listitem>
						<para>
							Name der Strukturvorlage. Kann frei gewählt
							werden, sollte zur einfachen Identifizierung
							möglichst beschreibend sein.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Beschreibung</guilabel></term>
					<listitem>
						<para>
							Beschreibung der Strukturvorlage. Kann frei
							gewählt werden.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Inhalt</guilabel></term>
					<listitem>
						<para>
							Die eigentliche Strukturvorlage, die 1:1 in
							den Inhaltsbereich der jeweiligen Seite kopiert
							wird. Bei der Gestaltung der Strukturvorlage ist
							man als Anwender total frei.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			
			<para>
				Beispiel für eine (XHTML)Strukturvorlage:
			</para>
			
			<programlisting><![CDATA[
<h1>Produkttitel</h1>

<p class="lead">Einleitung</p>

<h2>Produkteigenschaften</h2>

<ul>
<li>Listenpunkt 1</li>
<li>Listenpunkt 2</li>
</ul>

<h2>Produktbild</h2>

<img src="xxx" />
]]></programlisting>
			
			<para>
				Sobald die Strukturvorlage erstellt wurde, kann sie bei der
				Verwaltung der Inhalte benutzt werden (siehe <xref
				linkend="contents.structural_templates.usage"/>).
			</para>
		</sect2>
		
		<sect2 id="contents.structural_templates.usage">
			<title>Anwendung</title>
			
			<para>
				Die Verwendung der Strukturvorlagen ist bei allen
				Inhaltsbereichen der Inhaltsseiten sowie bei den verschiedenen
				Boxen möglich. Das Menü zur Auswahl der Strukturvorlage, die
				benutzt werden soll, kann über den Menüpunkt
				<guisubmenu>Strukturvorlagen</guisubmenu> über dem
				jeweiligen Inhaltsbereich aufgerufen werden. Die vorhandenen
				Strukturvorlagen werden in einem Popup-Fenster alphabetisch sortiert 
				aufgelistet und lassen sich mit einem Klick auf den Namen der gewünschten
				Strukturvorlage auswählen. Die Strukturvorlage wird daraufhin
				an der Stelle des Cursors in den Inhaltsbereich eingesetzt.
			</para>
			
			<figure id="contents.structural_templates.usage.insert_structural_template">
				<title>Strukturvorlage einsetzen
					</title>
				<graphic fileref="images/contents/structural_templates/usage.insert_structural_template.png"/>
			</figure>
			
			<para>
				Bei Bedarf können Strukturvorlagen mehrmals eingesetzt und
				beliebig miteinander kombiniert werden.
			</para>
		</sect2>
		
	</sect1>


	<sect1 id="contents.abbreviations">
		<title>Abkürzungen</title>

		<sect2 id="contents.abbreviations.introduction">
			<title>Einführung</title>

			<para>
				Die Auszeichnung von in textlichen Inhalten verwandten
				Abkürzungen und Akronymen<footnote><para>In kommenden HTML
				Versionen wird der  HTML Tag <code>acronym</code> nicht
				mehr enthalten sein. Aus diesen Grund unterscheidet Welcompose
				nicht zwischen Abkürzungen und Akronymen.</para></footnote>
				ist ein wesentliches Merkmal von benutzerfreundlichen Seiten.
				Gleichzeitig ist es eine zu erfüllende Anforderung, möchte man Inhalte BITV-konform
				<footnote><para><ulink url="http://www.einfach-fuer-alle.de/artikel/bitv/">
				BITV</ulink></para></footnote> gestalten. 
			</para>

			<para>
				Abkürzungen und Akronyme, die sie hier anlegen, stehen Ihnen
				überall dort zur Verfügung, wo Inhalte ausgezeichnet werden
				können.
			</para>

			<para>
				Zusätzlich zur Auszeichnung der Inhalte mit dem entsprechenden HTML Tag,
				kann aus den angelegten Abkürzungen/Akronymen ein Abkürzungverzeichnis/Glossar
				erstellt werden, das mit wenigen Zeilen über ein Smarty-Plugin (s. unten 
				<xref linkend="contents.abbreviations.glossar.output"/>) in den Seitenvorlagen 
				eingefügt wird. Da beispielsweise Screenreader den <code>title</code>-Tag 
				unterschiedlich behandeln oder gar ignorieren, ist ein Glossar/Abkürzungsverzeichnis
				eine technische Möglichkeit, die Ausschreibung und weitere Erläuterung einer
				Abkürzung den Benutzern dieses Ausgabemedium zugänglich zu machen.
			</para>

		</sect2>

		<sect2 id="contents.abbreviations.manage">
			<title>Verwaltung</title>

			<para>
				Die Verwaltung der Abkürzungen erfolgt im
				Administrationsbereich unter <guimenu>Inhalte</guimenu>
				im Unterpunkt <guisubmenu>Abkürzungen</guisubmenu>.
				Wenn Sie dort auf den Link <guibutton>Neu anlegen</guibutton>
				klicken, gelangen Sie zum Formular zum Anlegen einer neuen
				Abkürzung.
			</para>

			<figure id="contents.abbreviations.manage.abbreviation_add">
				<title>Abkürzungen anlegen</title>
				<graphic fileref="images/contents/abbreviations/manage.abbreviation_add.png"/>
			</figure>

			<variablelist>
				<varlistentry>
					<term><guilabel>Name</guilabel></term>
					<listitem>
						<para>
							Tragen Sie hier die Abkürzung ein.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Langform</guilabel></term>
					<listitem>
						<para>
							Die ausgeschriebene Form der Abkürzung. Diese wird
							als <code>title</code> Attribut verwandt.
						</para>
						<warning>
							<para>
								Bitte beachten Sie, das Browser den title-Tag 
								in unterschiedlicher Länge anzeigen. Kontrollieren
								Sie bitte die Anzeige in verschiedenen Browsern.
							</para>
						</warning>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Glossar</guilabel></term>
					<listitem>
						<para>
							Wenn die Abkürzung Bestandteil eines Glossar sein soll,
							 tragen Sie hier bitte die entsprechende
							Beschreibung der Abkürzung ein. Nutzen Sie kein Glossar,
							lassen dieses Feld bitte einfach frei.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Sprache</guilabel></term>
					<listitem>
						<para>
							Die Angabe dieses Attributes hilft Screenreadern
							die Abkürzung in der adäquaten Aussprache vorzulesen.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Textkonverter</guilabel></term>
					<listitem>
						<para>
							Textkonverter, der auf den Inhalt des Glossar-Feld
							 appliziert werden soll (siehe <xref
							linkend="settings.text_converters"/>).
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><guilabel>Makros anwenden</guilabel></term>
					<listitem>
						<para>
							Entscheidet, ob die vorhandenen Textmakros auf den Inhalt des
							Glossar-Feld appliziert werden sollen (siehe <xref
							linkend="settings.text_macros"/>).
						</para>
					</listitem>
				</varlistentry>
			</variablelist>

			<para>
				Zum Bearbeiten einer Abkürzung klicken Sie bitte auf den Button 
				<guibutton>Bearbeiten</guibutton> in der entsprechenden Zeile
				auf der Übersichtsseite der Abkürzungen um zu den Eingabefelder
				des gewählten Eintrages zu gelangen.
			</para>
						
			<note>
				<para>
					Wenn Sie eine bestehende Abkürzung bearbeitet haben,
					muss den inhaltlichen Seiten, in denen die Abkürzung verwandt wird, 
					mitgeteilt werden, das sich der Inhalt und unter Umständen die Syntax
					der Einbindung geändert hat. Die Aktualisierung der Seiteninhalte
					findet nicht automatisch statt.
				</para>
				<para>
					Hierzu gibt es im Adminstrationbereich <guimenu>Einstellungen</guimenu> das
					Untermenü <guisubmenu>Aktionen</guisubmenu>. Dort können Sie mit einem Klick
					auf den Button <guibutton>Ausführen</guibutton> der entsprechenden Funktion
					(<xref linkend="settings.actions.actions.apply_abbreviations"/>) 
					alle Inhalte zeitgleich aktualisieren.
				</para>
			</note>
		</sect2>

		<sect2 id="contents.abbreviations.usage">
			<title>Anwendung</title>

			<para>
				Die Verwendung der Abkürzungen ist überall dort möglich,
				wo Inhalte ausgezeichnet werden können. Das Menü zur Auswahl
				der Abkürzung, die benutzt werden soll, kann über den Menüpunkt
				<guisubmenu>Abkürzungen</guisubmenu> oberhalb des
				jeweiligen Inhaltsbereich aufgerufen werden. Die vorhandenen
				Abkürzungen werden in einem Popup-Fenster alphabetisch sortiert 
				aufgelistet und lassen sich mit einem Klick auf den Namen der gewünschten
				Abkürzung auswählen. Die Abkürzung wird daraufhin
				an der Stelle des Cursors in den Inhaltsbereich eingesetzt.
			</para>

			<figure id="contents.abbreviations.usage.insert_abbreviation">
				<title>Abkürzung einsetzen
					</title>
				<graphic fileref="images/contents/abbreviations/usage.insert_abbreviation.png"/>
			</figure>
			
			<para>
				Um eine inhaltsnahe Bearbeitung zu ermöglichen, können Sie in diesem
				Fenster ebenfalls neue Abkürzungen anlegen. Diese stehen nach dem Speichern
				sofort zur Auswahl bereit. Zum Bearbeiten einer in diesem
				Fenster neu angelegten Abkürzung wechseln Sie bitte in den Administrationsbereich
				Abkürzungen (siehe <xref linkend="contents.abbreviations.manage"/>).  
			</para>
			
			<figure id="contents.abbreviations.usage.popup_insert_abbreviation">
				<title>Abkürzung auswählen oder/und anlegen
					</title>
				<graphic fileref="images/contents/abbreviations/usage.popup_insert_abbreviation.png"/>
			</figure>

		</sect2>
		
		<sect2 id="contents.abbreviations.glossar.output">
			<title>Ausgabe Glossar</title>

			<para>
				Welcompose ermöglicht es ohne viel Aufwand ein Glossar/Abkürzungsverzeichnis
				aus den Abkürzungen zu erstellen, die einen Eintrag im Feld <guilabel>Glossar</guilabel>
				haben.
			</para>
			
			<para>
				Ein Glossar/Abkürzungsverzeichnis ist in der Regel eine normale inhaltliche Seite 
				(Typ: <filename>Simple Page</filename>), die auch über die Navigation erreichbar
				ist. Da die Glossarseite einmalig ist und sich in der Inhaltsdarstellung
				von anderen Seiten gleichen Typs unterscheidet, legen wir somit nachfolgend eine neue
				Vorlagengruppe, eine neue Seitenvorlage und zuletzt die inhaltliche Seite an.
			</para>
			
			<para>
				Legen Sie zuerst eine neue Vorlagengruppe an. Gehen Sie hierzu zum Bereich
				 <guimenu>Vorlagen</guimenu> und dort in das
				Untermenü <guisubmenu>Vorlagengruppen</guisubmenu>. Klicken Sie 
				auf <guibutton>Neu hinzufügen</guibutton>, geben dort den Namen (bspw.
				<userinput>Glossar</userinput>) an und eventuell eine Beschreibung. Speichern Sie 
				die neue Vorlagengruppe. Wechseln Sie nun in das Untermenü 
				<guisubmenu>Seitenvorlagen</guisubmenu>. Dort legen Sie eine neue Seitenvorlage vom
				Typ <code>simple_page_index</code> an oder duplizieren eine schon bestehende Vorlage,
				die diesem Typ entspricht.
			</para>
			
			<para>
				Benennen Sie die Vorlage um und wählen im Feld <guilabel>Vorlagengruppe</guilabel> die zuvor
				neu angelegte Vorlagengruppe aus.
			</para>
			
			<para>
				Für die Ausgabe eines Glossar/Abkürzungverzeichnis liefert Welcompose ein Smarty Plugin
				bereits mit. Das Glossar Plugin erzeugt automatisch eine alphabetische Linkleiste, setzt
				korrespondierende Ankerlinks und gibt die Inhalte der Abkürzung aus. Dem Prinzip von
				Welcompose folgend, findet keine Vorformartierung der Ausgabe statt, so dass sie
				vollständig frei sind, die Ausgabe zu gestalten.
			</para>
			
			<para>
				<emphasis role="strong">Smarty Plugin Get Glossary</emphasis>:
			</para>
			
			<programlisting><![CDATA[
{* Smarty Get Glossary Plugin mit Parameter Action "pager" *}
{get_glossary var="glossary" action="pager"}

{* Smarty Get Glossary Plugin mit Parameter Action "content" *}
{get_glossary var="glossary" action="content"}
]]></programlisting>

			<para>
				Das Plugin erwartet zwingend die Angabe zweier Parameter.
				Die Werteangabe des Parameter <code>var</code> ist frei wählbar. Der Parameter
				<code>action</code> erwartet entweder die Angabe <userinput>pager</userinput>
				oder <userinput>content</userinput>. Setzen Sie den Wert auf <userinput>pager</userinput>
				um die alphabetische Linkleiste zum Navigieren des Glossar auszulesen. Mit dem Wert 
				<userinput>content</userinput> stellt das Plugin die Inhalte der Abkürzungstabelle
				zur Verfügung.
			</para>
			
			<example id="contents.abbreviations.glossar.output.get_glossar">
				<title>Glossar formatiert ausgeben</title>
				
			<para>
				Nachfolgend wird ein Beispiel gelistet, das die notwendigen Bedingungen setzt um
				eine valide und sematisch korrekte Glossarausgabe zu erhalten. Kopieren Sie den
				Code und fügen Sie ihn Ihrer Seitenvorlage hinzu. 
			</para>

			<programlisting><![CDATA[
{* Smarty Get Glossary Plugin :: Linkleiste *}
{get_glossary var="glossary" action="pager"}

<ul>
{foreach item="_glossary" from=$glossary}
{if !empty($_glossary.has_link)}
  <li><a href="#{$_glossary.char}">{$_glossary.char}</a></li>
{else}
  <li>{$_glossary.char}</li>
{/if}
{/foreach}
</ul>

{* Smarty Get Glossary Plugin :: Ausgabe der Abkürzungstabelle *}
{get_glossary var="glossary" action="content"}

<dl>
{foreach item="_glossary" from=$glossary}
{if !is_null($_glossary.anchor)}
<h3>{$_glossary.anchor}<a id="{$_glossary.anchor}" name="{$_glossary.anchor}"></a></h3>
{/if}
  <dt>{$_glossary.name}<a id="{$_glossary.name}" name="{$_glossary.name}"></a></dt>
  <dd>{$_glossary.long_form}</dd>
  <dd>{$_glossary.content}</dd>
{/foreach}
</dl>]]></programlisting>
			</example>
			
			<para>
				Speichern Sie die Seitenvorlage und gehen zum Adminstrationsbereich
				<guimenu>Inhalte</guimenu> und dort zum Untermenü
				<guisubmenu>Seiten</guisubmenu> um an gewünschter Stelle eine neue
				Seite für das Glossar anzulegen. Wählen Sie für die neue Seite als 
				<guilabel>Vorlagengruppe</guilabel> die zuvor angelegte und zugewiesene
				Gruppe aus (<userinput>Glossar</userinput>). Speichern Sie die Seite.
			</para>
			
			<para>
				Damit ist die Erstellung des Glossar abgeschlossen.
			</para>
		</sect2>

	</sect1>

</chapter>