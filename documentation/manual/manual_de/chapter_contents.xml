<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="contents">
	<title>Inhalte</title>
	
	<sect1 id="contents.how_it_works">
		<title>Arbeitsweise von Welcompose</title>
		
		<para>
			Im Gegensatz zu Programmen wie Dreamweaver
			bearbeitet man mit Welcompose keine kompletten Seiten,
			sondern Strukturelemente. Welcompose unterstützt etliche
			Strukturelemente. Zu diesen gehören beispielsweise
			Navigationen, Boxen oder auch Grundgerüste für verschiendene
			Inhaltstypen wie Formulare oder Blogs. Erst diese
			Strukturelemente ergeben zusammengesetzt und kombiniert mit
			einer Vorlage die fertige Seite. Einen schematische
			Visualisierung dieses Ablaufs zeigt die Grafik <xref
			linkend="contents.how_it_works.site_building"/>.
		</para>
		
		<figure id="contents.how_it_works.site_building">
			<title>Zusammensetzung einer Seite</title>
			<graphic fileref="images/contents/how_it_works/site_building.png"/>
		</figure>
		
		<para>
			Strukturelemente sind fast beliebig kombinierbar. Dies heisst, dass
			bei der Gestaltung (abgesehen von der Funktionalität der einzelnen
			Strukturelemente) einer Seite kaum Grenzen gesetzt sind. Ausnahmen
			sind beispielsweise die Grundgerüste für verschiedene Inhaltstypen,
			von denen pro Ausgabeseite nur eines vorkommen kann. Eine weitere
			Einschränkung ist, dass Strukturelemente voneinander abhängen
			können. So ist es beispielsweise nicht möglich, ein Blog Posting
			ohne Blog zu haben. Eine schematische Darstellung der Abhängigkeiten
			zwischen den einzelnen Strukturelementen zeigt Grafik <xref
			linkend="contents.how_it_works.dependencies_structural_elements"/>.
		</para>
		
		<figure id="contents.how_it_works.dependencies_structural_elements">
			<title>Abhängigkeiten zwischen Strukturelementen</title>
			<graphic fileref="images/contents/how_it_works/dependencies_structural_elements.png"/>
		</figure>
	</sect1>
	
	<sect1 id="contents.navigations">
		<title>Navigationen</title>
		
		<sect2 id="contents.navigations.introduction">
			<title>Einführung</title>
			
			<para>
				Navigationen dienen dazu, Seiten zu Gruppen von Menüpunkten
				für den Aufbau von Navigationen zusammenzufassen. Damit lassen
				sich auf einfache Weise in den Ausgabevorlagen
				Navigationsstrukturen (beispielsweise HTML-Listen) automatisch
				erzeugen, ohne dass man wissen muss, welcher Menüpunkt genau
				wohin kommt. Die Steuerung von Zugehörigkeit einer Seite
				(und damit eines Menüpunkts) zu einer bestimmten Navigation
				sowie die genaue Platzierung des Menüpunkts innerhalb einer
				Navigation lässt sich komplett über die
				Administrationsoberfläche steuern.
			</para>
			
			<para>
				Für maximale Flexibilität beim Aufbau einer Webseite unterstützt
				Welcompose mehrere Navigationen sowie eine unbegrenzte Anzahl
				von Navigationspunkten pro Navigation.
			</para>
			
			<para>
				Ein Beispiel für die Benutzung mehrfacher Navigationen
				zeigt <xref
				linkend="contents.navigations.introduction.two_navigations_sample"/>.
			</para>
			
			<figure id="contents.navigations.introduction.two_navigations_sample">
				<title>Abhänigkeiten zwischen Strukturelementen</title>
				<graphic fileref="images/contents/navigations/introduction.two_navigations_sample.png"/>
			</figure>
		</sect2>
		
		<sect2 id="contents.navigations.manage">
			<title>Verwaltung</title>
			
			<para>
				Die Verwaltung der Navigationen erfolgt über die
				Administrationsoberfläche unter dem Menüpunkt
				<guimenuitem>Navigations</guimenuitem> im Bereich
				<guimenuitem>Contents</guimenuitem>. Dort können
				Navigationen hinzugefügt, bearbeitet und gelöscht werden.
			</para>
			
			<figure id="contents.navigations.manage.manage_navigations">
				<title>Navigationen verwalten</title>
				<graphic fileref="images/contents/navigations/manage.manage_navigations.png"/>
			</figure>
			
			<para>
				Eine Navigation besteht einzig und allein aus einem
				Navigationsnamen. Dieser hilft dabei, die Navigation
				zu identifizieren und Menüpunkte respektive Seiten der
				Navigation zuzuweisen. Wählen Sie deshalb einen möglichst
				beschreibenden und eindeutigen Namen für eine Navigation aus,
				beispielsweise <userinput>Hauptnavigation</userinput>
				oder <userinput>Fusszeile</userinput>. Da Navigationen über
				ihren Namen identifiziert werden, kann pro Projekt jeder
				Navigationsname nur einmal vorkommen.
			</para>
			
			<para>
				Die Navigationen werden auch bei der Verwaltung der Seiten
				angetroffen. Auf der Übersichtsseite sind die verschiedenen
				Navigationen mitsamt den ihnen zugeordneten Seiten
				alphabetisch gelistet (siehe <xref
				linkend="contents.pages.manage"/>).
			</para>
			
		</sect2>
		
		<sect2 id="contents.navigations.output">
			<title>Ausgabe</title>
						
			<note>
				<para>
					Wenn Sie die Menüpunkte einer Navigation ausgeben wollen,
					konsultieren Sie bitte den entsprechenden <xref
					linkend="contents.pages.output"/> im
					<xref linkend="contents.pages"/>.
				</para>
			</note>
			
			<example id="contents.navigations.output.get_navigation">
				<title>Navigation auslesen</title>
				
				<para>
					Um eine einzelne Navigation auszulesen, wird die ID
					(im Beispiel <userinput>1</userinput>) der jeweiligen
					Navigation benötigt. 
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Navigation mit der ID 1 auslesen*}
{select_simple ns="Content" class="Navigation" method="selectNavigation"
	var="navigation" id="1"}
	
{* Navigation mit ID und Namen ausgeben *}
ID der Navigation: {$navigation.id}
Name der Navigation: {$navigation.name}
]]></programlisting>
			</example>
			
			<example id="contents.navigations.output.get_navigations">
				<title>Mehrere Navigationen auslesen</title>
				
				<para>
					Es werden alle dem aktuellen Projekt zugeordneten
					Navigationen ausgelesen und alphabetisch sortiert
					ausgegeben.
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Navigationen auslesen *}
{select_named ns="Content" class="Navigation" method="selectNavigations"
	var="navigations"}
	
{* Navigationen mit Namen und ID ausgeben *}
{foreach from=$navigations item="_navigation"}
	ID der Navigation: {$_navigation.id}
	Name des Navigation: {$_navigation.name}
{/foreach}
]]></programlisting>
			</example>
			
		</sect2>
	</sect1>
	
	<sect1 id="contents.pages">
		<title>Seiten</title>
		
		<sect2 id="contents.pages.introduction">
			<title>Einführung</title>
			
			<para>
				Seiten stellen im Fall der Strukturelemente nur Grundgerüste
				für die effektive Webseite dar. Sie bestehen genauer gesagt
				aus einer Reihe von Elementen, die typischerweise auf der
				jeweiligen Seitenart vorkommen und beliebig auf einer Seite
				positioniert werden können. So besteht eine Formularseite
				aus einem Formular und eine Blog-Seite aus etlichen
				Blog Postings.
			</para>
			
			<para>
				Gleichzeitig stellen Seiten die Menüpunkte innerhalb einer
				Navigation dar. Das heisst, dass jede Seite einem Menüpunkt
				entspricht und man ohne Seite keinen Menüpunkt erhält. 
			</para>
			
			<para>
				Da Welcompose bereits etliche Seitentypen unterstützt
				(und es wohl noch einige mehr werden dürften), sind die
				Eigenschaften und die Verwendung der verschiedenen
				Seitentypen in separaten Kapiteln erklärt.
			</para>
		</sect2>
		
		<sect2 id="contents.pages.manage">
			<title>Verwaltung</title>
			
			<sect3 id="contents.pages.manage.overview">
			<title>Seiten-Übersicht</title>
			
				<para>
					Die Verwaltung der Seiten erfolgt beim Menüpunkt
					<guimenuitem>Pages</guimenuitem> im Bereich
					<guimenuitem>Contents</guimenuitem>. Die Seiten sind nach
					den jeweiligen Navigationen, zu denen sie gehören,
					zusammengefasst und in der Reihenfolge und Einrückung
					dargestellt, wie sie später ausgegeben werden. 
				</para>
				
				<para>
					Nachdem eine Navigation angelegt wurde, erhält man auf der
					Seiten-Übersichtsseite einen Eintrag für die Navigation
					samt einer leeren zugehörigen Seitenstruktur. Die 
					Seitenstruktur teilt sich bei einer vorhandenen Navigation
					in fünf, bei mehreren vorhandenen Navigationen in sechs
					Spalten auf.
				</para>
				
				<figure id="contents.pages.manage.page_manager">
					<title>Seiten-Übersicht</title>
					<graphic fileref="images/contents/pages/manage.page_manager.png"/>
				</figure>
				
				<variablelist>
					<title>Funktionselemente Seitenübersicht</title>
					<varlistentry>
						<term>Page structure</term>
						<listitem>
							<para>
								Enthält den Namen der einzelnen Seite,
								wie er in der Navigation als Menüpunkt
								erscheint. Der Namen wird zudem mit der
								richtigen Einrückung gezeigt, wobei jede
								Verschachtelungsebene durch einen grauen
								Punkt vor dem Namen gezeigt wird. Eine Seite
								über alle Navigationen hinweg kann mit einem
								kleinen orangen I (i) markiert sein. Dies
								signalisiert, dass es sich bei der Seite um die
								sogenannte Index-Seite handelt, die beim Aufruf
								des Welcompose-Ausgabebereits ohne irgendwelche
								Parameter angezeigt wird.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Move</term>
						<listitem>
							<para>
								Die Spalte <guilabel>Move</guilabel>
								hält zwei Schaltflächen bereit, mit denen die
								Menüpunkte im Rahmen der Navigation nach
								oben respektive nach unten bewegt werden können.
								Gleichzeitig wird darüber die Einrückung
								beeinflusst. Das Prinzip hinter der Bewegung
								beleuchtet grob <xref
								linkend="contents.pages.manage.page_moving_results"/>.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Add</term>
						<listitem>
							<para>
								Fügt neue Seite zur aktuellen Navigation
								relativ zum aktuellen Menüpunkt ein. Menüpunkt
								wird entweder über oder unter dem aktuellen
								Menüpunkt eingesetzt.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Edit</term>
						<listitem>
							<para>
								Über die Schaltfläche
								<guibutton>Edit</guibutton> gelangen Sie zu
								den Formularen, um die Metadaten der jeweiligen
								Seiten (beispielsweise den Namen der Seite)
								sowie deren Inhalte zu bearbeiten. 
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Move away</term>
						<listitem>
							<para>
								Die Schaltfläche <guibutton>Move away</guibutton>,
								die nur vorhanden ist, wenn mehr als eine
								Navigation existiert, erlaubt es, eine Seite
								respektive einen Menüpunkt an eine andere
								Navigation anzuhängen.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Löschen</term>
						<listitem>
							<para>
								Löscht die Seite und alle ihre Inhalte.
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				
				<figure id="contents.pages.manage.page_moving_results">
					<title>Seiten verschieben</title>
					<graphic fileref="images/contents/pages/manage.page_moving_results.png"/>
				</figure>
				
				<para>
					Beim Hinzufügen einer Seite werden eine Reihe von
					Informationen abgefragt, mit denen die Anzeige sowie die
					Inhalte der Seite beeinflusst werden können. Im Rahmen
					von Welcompose werden diese Informationen als
					Metadaten bezeichnet.
				</para>
				
				<figure id="contents.pages.manage.add_page">
					<title>Seite hinzufügen</title>
					<graphic fileref="images/contents/pages/manage.add_page.png"/>
				</figure>
				
				<variablelist>
					<title>Formular-Felder Seiten hinzufügen</title>
					<varlistentry>
						<term>Position</term>
						<listitem>
							<para>
								Bestimmt, wie die neue Seite in die Navigation
								eingefügt werden soll und zwar relativ
								gesehen zum Menüpunkt, neben dem auf die
								Schaltfläche <guibutton>Add</guibutton>
								geklickt wurde. Eine Seite kann entweder
								oberhalb oder unterhalb des Menüpunkts
								eingefügt werden.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Name</term>
						<listitem>
							<para>
								Name der Seite respektive des Menüpunkts.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>URL Name</term>
						<listitem>
							<para>
								Name der Seite in einer vereinfachten Form
								für den Einsatz in suchmaschinenfreundlichen
								URLs (nur a-z, 0-9 und - als erlaubte Zeichen).
								Wird automatisch mit Hilfe von JavaScript
								bei der Eingabe des Seitennamen erzeugt
								und kann bei Bedarf manuell angepasst werden.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Type</term>
						<listitem>
							<para>
								Bestimmt den Seitentyp der Seite, respektive
								mit welchen Inhalten die Seite befüllt werden
								kann. Diese Einstellung kann später nicht mehr
								geändert werden.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Template Set</term>
						<listitem>
							<para>
								Vorlagen-Pool, aus dem die Vorlagen für die
								Anzeige der Seite ausgewählt werden sollen.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Index page</term>
						<listitem>
							<para>
								Markiert die Seite als Index Page, also als
								Seite, die beim Aufruf des Ausgabe-Bereichs von
								Welcompose ohne weitere Parameter verwendet
								wird ("Startseite").
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Protect</term>
						<listitem>
							<para>
								Erlaubt den Zugriff auf die entsprechende
								Seite nur nach Eingabe von Benutzernamen
								und Passwort. Welche Anwender sich anmelden
								dürfen, wird über das Feld
								<guilabel>Group</guilabel> gesteuert.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Groups</term>
						<listitem>
							<para>
								Benutzergruppen, denen der Zugriff auf die
								Seite gestattet wird, sollte sie geschützt
								sein.
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				
				<para>
					Parallel zu den "normalen" Metadaten-Feldern bietet
					Welcompose einige ergänzende Felder, die beispielsweise
					zur Befüllung mit Inhalt genutzt werden können. So erlaubt
					das Feld <guilabel>Alternate name</guilabel> die Speicherung
					eines alternativen Seitennamen sowie
					<guilabel>Description</guilabel> und
					<guilabel>Optional text</guilabel> das Hinterlegen von
					beliebigem Fliesstext, der beispielsweise für die Befüllung
					von Metatags im Seitenkopf verwendet werden kann. Die
					Verwendung der Felder <guilabel>Sitemap change
					frequency</guilabel> und <guilabel>Sitemap
					Priority</guilabel> wird im <xref
					linkend="usage.google_sitemaps"/> erklärt.
				</para>
			</sect3>
		</sect2>
		
		<sect2 id="contents.pages.output">
			<title>Ausgabe</title>
			
			<example id="contents.pages.output.get_current_page">
				<title>Aktuelle Seite auslesen</title>
				
				<para>
					Das explizite Auslesen der jeweils aktuellen Seite ist in
					der Regel nicht nötig, da Welcompose dies automatisch
					übernimmt und die Metadaten der aktuellen Seite über die
					Smarty-Variable <code>{$page}</code> zur Verfügung stellt:
				</para>
				
				<programlisting language="smarty"><![CDATA[
Seiten-ID: {$page.id}
Seiten-Name: {$page.name}
Beschreibung: {$page.description}
]]></programlisting>
			</example>
			
			<example id="contents.pages.output.get_page">
				<title>Seite auslesen</title>
				
				<para>
					Wollen Sie irgendwann einmal eine bestimmte Seite auslesen,
					die nicht der aktuellen Seite entspricht, geht dies
					natürlich auch. Achten Sie dabei darauf, nicht die
					Variable mit den Metadaten der aktuellen Seite zu
					überschreiben. Oder einfach gesagt: Wählen Sie nicht den
					Variablennamen <code>$page</code>.
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Seite mit der ID 1 auslesen *}
{select_simple ns="Content" class="Page" method="selectPage"
	var="some_page" id="1"}

Seiten-ID: {$some_page.id}
Seiten-Name: {$some_page.name}
]]></programlisting>
			</example>
			
			<example id="contents.pages.output.get_pages">
				<title>Mehrere Seiten auslesen</title>
				
				<para>
					Eine Aufgabe, die wohl bei ziemlich jeder Webseite
					anfallen wird, ist das Auslesen mehrerer Seiten.
					Beispielsweise, wenn es darum geht, die Menüpunkte
					einer Navigation auszulesen. 
				</para>
				
				<programlisting language="smarty"><![CDATA[
{* Seiten zugehörig zu Navigation 1 auslesen *}
{select_named ns="Content" class="Page" method="selectPages"
	var="pages" navigation="1"}

{foreach from=$pages item="_page"}
	Seiten-ID: {$_page.id}
	Seiten-Name: {$_page.name}
{/foreach}
]]></programlisting>
			</example>
			
			<tip>
				<para>
					Die Erzeugung einer verschachtelten Navigation mit Hilfe
					von HTML-Listen wird in <xref
					linkend="usage.nested_navigation"/> erklärt.
				</para>
			</tip>
		</sect2>
	</sect1>
</chapter>